// source: sequence.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var method_pb = require('./method_pb.js');
goog.object.extend(proto, method_pb);
var types_pb = require('./types_pb.js');
goog.object.extend(proto, types_pb);
goog.exportSymbol('proto.api_spec.DataRef', null, global);
goog.exportSymbol('proto.api_spec.DataRef.ValueRefCase', null, global);
goog.exportSymbol('proto.api_spec.DataTemplate', null, global);
goog.exportSymbol('proto.api_spec.DataTemplate.ValueTemplateCase', null, global);
goog.exportSymbol('proto.api_spec.IndexedDataRef', null, global);
goog.exportSymbol('proto.api_spec.ListRef', null, global);
goog.exportSymbol('proto.api_spec.ListRef.FullListRef', null, global);
goog.exportSymbol('proto.api_spec.ListRef.RefCase', null, global);
goog.exportSymbol('proto.api_spec.ListTemplate', null, global);
goog.exportSymbol('proto.api_spec.MethodDataRef', null, global);
goog.exportSymbol('proto.api_spec.MethodDataRef.RefCase', null, global);
goog.exportSymbol('proto.api_spec.MethodTemplate', null, global);
goog.exportSymbol('proto.api_spec.NamedDataRef', null, global);
goog.exportSymbol('proto.api_spec.OptionalTemplate', null, global);
goog.exportSymbol('proto.api_spec.PrimitiveRef', null, global);
goog.exportSymbol('proto.api_spec.PrimitiveRef.TypeCase', null, global);
goog.exportSymbol('proto.api_spec.Sequence', null, global);
goog.exportSymbol('proto.api_spec.SequenceRun', null, global);
goog.exportSymbol('proto.api_spec.StructRef', null, global);
goog.exportSymbol('proto.api_spec.StructRef.FullStructRef', null, global);
goog.exportSymbol('proto.api_spec.StructRef.RefCase', null, global);
goog.exportSymbol('proto.api_spec.StructTemplate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.NamedDataRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.NamedDataRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.NamedDataRef.displayName = 'proto.api_spec.NamedDataRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.IndexedDataRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.IndexedDataRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.IndexedDataRef.displayName = 'proto.api_spec.IndexedDataRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.PrimitiveRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.PrimitiveRef.oneofGroups_);
};
goog.inherits(proto.api_spec.PrimitiveRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.PrimitiveRef.displayName = 'proto.api_spec.PrimitiveRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.StructRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.StructRef.oneofGroups_);
};
goog.inherits(proto.api_spec.StructRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.StructRef.displayName = 'proto.api_spec.StructRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.StructRef.FullStructRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.StructRef.FullStructRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.StructRef.FullStructRef.displayName = 'proto.api_spec.StructRef.FullStructRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.ListRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.ListRef.oneofGroups_);
};
goog.inherits(proto.api_spec.ListRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.ListRef.displayName = 'proto.api_spec.ListRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.ListRef.FullListRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.ListRef.FullListRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.ListRef.FullListRef.displayName = 'proto.api_spec.ListRef.FullListRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.DataRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.DataRef.oneofGroups_);
};
goog.inherits(proto.api_spec.DataRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.DataRef.displayName = 'proto.api_spec.DataRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.MethodDataRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.MethodDataRef.oneofGroups_);
};
goog.inherits(proto.api_spec.MethodDataRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.MethodDataRef.displayName = 'proto.api_spec.MethodDataRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.StructTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.StructTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.StructTemplate.displayName = 'proto.api_spec.StructTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.ListTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_spec.ListTemplate.repeatedFields_, null);
};
goog.inherits(proto.api_spec.ListTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.ListTemplate.displayName = 'proto.api_spec.ListTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.OptionalTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.OptionalTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.OptionalTemplate.displayName = 'proto.api_spec.OptionalTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.DataTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.DataTemplate.oneofGroups_);
};
goog.inherits(proto.api_spec.DataTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.DataTemplate.displayName = 'proto.api_spec.DataTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.MethodTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.MethodTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.MethodTemplate.displayName = 'proto.api_spec.MethodTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Sequence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_spec.Sequence.repeatedFields_, null);
};
goog.inherits(proto.api_spec.Sequence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Sequence.displayName = 'proto.api_spec.Sequence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.SequenceRun = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.SequenceRun, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.SequenceRun.displayName = 'proto.api_spec.SequenceRun';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.NamedDataRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.NamedDataRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.NamedDataRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.NamedDataRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataRef: (f = msg.getDataRef()) && proto.api_spec.DataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.NamedDataRef}
 */
proto.api_spec.NamedDataRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.NamedDataRef;
  return proto.api_spec.NamedDataRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.NamedDataRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.NamedDataRef}
 */
proto.api_spec.NamedDataRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.api_spec.DataRef;
      reader.readMessage(value,proto.api_spec.DataRef.deserializeBinaryFromReader);
      msg.setDataRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.NamedDataRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.NamedDataRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.NamedDataRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.NamedDataRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.DataRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api_spec.NamedDataRef.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.NamedDataRef} returns this
 */
proto.api_spec.NamedDataRef.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DataRef data_ref = 2;
 * @return {?proto.api_spec.DataRef}
 */
proto.api_spec.NamedDataRef.prototype.getDataRef = function() {
  return /** @type{?proto.api_spec.DataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataRef, 2));
};


/**
 * @param {?proto.api_spec.DataRef|undefined} value
 * @return {!proto.api_spec.NamedDataRef} returns this
*/
proto.api_spec.NamedDataRef.prototype.setDataRef = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.NamedDataRef} returns this
 */
proto.api_spec.NamedDataRef.prototype.clearDataRef = function() {
  return this.setDataRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.NamedDataRef.prototype.hasDataRef = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.IndexedDataRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.IndexedDataRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.IndexedDataRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.IndexedDataRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataRef: (f = msg.getDataRef()) && proto.api_spec.DataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.IndexedDataRef}
 */
proto.api_spec.IndexedDataRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.IndexedDataRef;
  return proto.api_spec.IndexedDataRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.IndexedDataRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.IndexedDataRef}
 */
proto.api_spec.IndexedDataRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 2:
      var value = new proto.api_spec.DataRef;
      reader.readMessage(value,proto.api_spec.DataRef.deserializeBinaryFromReader);
      msg.setDataRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.IndexedDataRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.IndexedDataRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.IndexedDataRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.IndexedDataRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDataRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.DataRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 index = 1;
 * @return {number}
 */
proto.api_spec.IndexedDataRef.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.IndexedDataRef} returns this
 */
proto.api_spec.IndexedDataRef.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional DataRef data_ref = 2;
 * @return {?proto.api_spec.DataRef}
 */
proto.api_spec.IndexedDataRef.prototype.getDataRef = function() {
  return /** @type{?proto.api_spec.DataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataRef, 2));
};


/**
 * @param {?proto.api_spec.DataRef|undefined} value
 * @return {!proto.api_spec.IndexedDataRef} returns this
*/
proto.api_spec.IndexedDataRef.prototype.setDataRef = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.IndexedDataRef} returns this
 */
proto.api_spec.IndexedDataRef.prototype.clearDataRef = function() {
  return this.setDataRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.IndexedDataRef.prototype.hasDataRef = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.PrimitiveRef.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.api_spec.PrimitiveRef.TypeCase = {
  TYPE_NOT_SET: 0,
  BOOL_TYPE: 1,
  BYTES_TYPE: 2,
  STRING_TYPE: 3,
  INT32_TYPE: 4,
  INT64_TYPE: 5,
  UINT32_TYPE: 6,
  UINT64_TYPE: 7,
  DOUBLE_TYPE: 8,
  FLOAT_TYPE: 9
};

/**
 * @return {proto.api_spec.PrimitiveRef.TypeCase}
 */
proto.api_spec.PrimitiveRef.prototype.getTypeCase = function() {
  return /** @type {proto.api_spec.PrimitiveRef.TypeCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.PrimitiveRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.PrimitiveRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.PrimitiveRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.PrimitiveRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.PrimitiveRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    boolType: (f = msg.getBoolType()) && types_pb.BoolType.toObject(includeInstance, f),
    bytesType: (f = msg.getBytesType()) && types_pb.BytesType.toObject(includeInstance, f),
    stringType: (f = msg.getStringType()) && types_pb.StringType.toObject(includeInstance, f),
    int32Type: (f = msg.getInt32Type()) && types_pb.Int32Type.toObject(includeInstance, f),
    int64Type: (f = msg.getInt64Type()) && types_pb.Int64Type.toObject(includeInstance, f),
    uint32Type: (f = msg.getUint32Type()) && types_pb.Uint32Type.toObject(includeInstance, f),
    uint64Type: (f = msg.getUint64Type()) && types_pb.Uint64Type.toObject(includeInstance, f),
    doubleType: (f = msg.getDoubleType()) && types_pb.DoubleType.toObject(includeInstance, f),
    floatType: (f = msg.getFloatType()) && types_pb.FloatType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.PrimitiveRef}
 */
proto.api_spec.PrimitiveRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.PrimitiveRef;
  return proto.api_spec.PrimitiveRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.PrimitiveRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.PrimitiveRef}
 */
proto.api_spec.PrimitiveRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.BoolType;
      reader.readMessage(value,types_pb.BoolType.deserializeBinaryFromReader);
      msg.setBoolType(value);
      break;
    case 2:
      var value = new types_pb.BytesType;
      reader.readMessage(value,types_pb.BytesType.deserializeBinaryFromReader);
      msg.setBytesType(value);
      break;
    case 3:
      var value = new types_pb.StringType;
      reader.readMessage(value,types_pb.StringType.deserializeBinaryFromReader);
      msg.setStringType(value);
      break;
    case 4:
      var value = new types_pb.Int32Type;
      reader.readMessage(value,types_pb.Int32Type.deserializeBinaryFromReader);
      msg.setInt32Type(value);
      break;
    case 5:
      var value = new types_pb.Int64Type;
      reader.readMessage(value,types_pb.Int64Type.deserializeBinaryFromReader);
      msg.setInt64Type(value);
      break;
    case 6:
      var value = new types_pb.Uint32Type;
      reader.readMessage(value,types_pb.Uint32Type.deserializeBinaryFromReader);
      msg.setUint32Type(value);
      break;
    case 7:
      var value = new types_pb.Uint64Type;
      reader.readMessage(value,types_pb.Uint64Type.deserializeBinaryFromReader);
      msg.setUint64Type(value);
      break;
    case 8:
      var value = new types_pb.DoubleType;
      reader.readMessage(value,types_pb.DoubleType.deserializeBinaryFromReader);
      msg.setDoubleType(value);
      break;
    case 9:
      var value = new types_pb.FloatType;
      reader.readMessage(value,types_pb.FloatType.deserializeBinaryFromReader);
      msg.setFloatType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.PrimitiveRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.PrimitiveRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.PrimitiveRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.PrimitiveRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoolType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.BoolType.serializeBinaryToWriter
    );
  }
  f = message.getBytesType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_pb.BytesType.serializeBinaryToWriter
    );
  }
  f = message.getStringType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      types_pb.StringType.serializeBinaryToWriter
    );
  }
  f = message.getInt32Type();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      types_pb.Int32Type.serializeBinaryToWriter
    );
  }
  f = message.getInt64Type();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      types_pb.Int64Type.serializeBinaryToWriter
    );
  }
  f = message.getUint32Type();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      types_pb.Uint32Type.serializeBinaryToWriter
    );
  }
  f = message.getUint64Type();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      types_pb.Uint64Type.serializeBinaryToWriter
    );
  }
  f = message.getDoubleType();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      types_pb.DoubleType.serializeBinaryToWriter
    );
  }
  f = message.getFloatType();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      types_pb.FloatType.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoolType bool_type = 1;
 * @return {?proto.api_spec.BoolType}
 */
proto.api_spec.PrimitiveRef.prototype.getBoolType = function() {
  return /** @type{?proto.api_spec.BoolType} */ (
    jspb.Message.getWrapperField(this, types_pb.BoolType, 1));
};


/**
 * @param {?proto.api_spec.BoolType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setBoolType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearBoolType = function() {
  return this.setBoolType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasBoolType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BytesType bytes_type = 2;
 * @return {?proto.api_spec.BytesType}
 */
proto.api_spec.PrimitiveRef.prototype.getBytesType = function() {
  return /** @type{?proto.api_spec.BytesType} */ (
    jspb.Message.getWrapperField(this, types_pb.BytesType, 2));
};


/**
 * @param {?proto.api_spec.BytesType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setBytesType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearBytesType = function() {
  return this.setBytesType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasBytesType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StringType string_type = 3;
 * @return {?proto.api_spec.StringType}
 */
proto.api_spec.PrimitiveRef.prototype.getStringType = function() {
  return /** @type{?proto.api_spec.StringType} */ (
    jspb.Message.getWrapperField(this, types_pb.StringType, 3));
};


/**
 * @param {?proto.api_spec.StringType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setStringType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearStringType = function() {
  return this.setStringType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasStringType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Int32Type int32_type = 4;
 * @return {?proto.api_spec.Int32Type}
 */
proto.api_spec.PrimitiveRef.prototype.getInt32Type = function() {
  return /** @type{?proto.api_spec.Int32Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Int32Type, 4));
};


/**
 * @param {?proto.api_spec.Int32Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setInt32Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearInt32Type = function() {
  return this.setInt32Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasInt32Type = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Int64Type int64_type = 5;
 * @return {?proto.api_spec.Int64Type}
 */
proto.api_spec.PrimitiveRef.prototype.getInt64Type = function() {
  return /** @type{?proto.api_spec.Int64Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Int64Type, 5));
};


/**
 * @param {?proto.api_spec.Int64Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setInt64Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearInt64Type = function() {
  return this.setInt64Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasInt64Type = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Uint32Type uint32_type = 6;
 * @return {?proto.api_spec.Uint32Type}
 */
proto.api_spec.PrimitiveRef.prototype.getUint32Type = function() {
  return /** @type{?proto.api_spec.Uint32Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Uint32Type, 6));
};


/**
 * @param {?proto.api_spec.Uint32Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setUint32Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearUint32Type = function() {
  return this.setUint32Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasUint32Type = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Uint64Type uint64_type = 7;
 * @return {?proto.api_spec.Uint64Type}
 */
proto.api_spec.PrimitiveRef.prototype.getUint64Type = function() {
  return /** @type{?proto.api_spec.Uint64Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Uint64Type, 7));
};


/**
 * @param {?proto.api_spec.Uint64Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setUint64Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearUint64Type = function() {
  return this.setUint64Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasUint64Type = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DoubleType double_type = 8;
 * @return {?proto.api_spec.DoubleType}
 */
proto.api_spec.PrimitiveRef.prototype.getDoubleType = function() {
  return /** @type{?proto.api_spec.DoubleType} */ (
    jspb.Message.getWrapperField(this, types_pb.DoubleType, 8));
};


/**
 * @param {?proto.api_spec.DoubleType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setDoubleType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearDoubleType = function() {
  return this.setDoubleType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasDoubleType = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FloatType float_type = 9;
 * @return {?proto.api_spec.FloatType}
 */
proto.api_spec.PrimitiveRef.prototype.getFloatType = function() {
  return /** @type{?proto.api_spec.FloatType} */ (
    jspb.Message.getWrapperField(this, types_pb.FloatType, 9));
};


/**
 * @param {?proto.api_spec.FloatType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setFloatType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearFloatType = function() {
  return this.setFloatType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasFloatType = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.StructRef.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.StructRef.RefCase = {
  REF_NOT_SET: 0,
  FULL_STRUCT: 1,
  FIELD_REF: 2
};

/**
 * @return {proto.api_spec.StructRef.RefCase}
 */
proto.api_spec.StructRef.prototype.getRefCase = function() {
  return /** @type {proto.api_spec.StructRef.RefCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.StructRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.StructRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.StructRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.StructRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullStruct: (f = msg.getFullStruct()) && proto.api_spec.StructRef.FullStructRef.toObject(includeInstance, f),
    fieldRef: (f = msg.getFieldRef()) && proto.api_spec.NamedDataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.StructRef}
 */
proto.api_spec.StructRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.StructRef;
  return proto.api_spec.StructRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.StructRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.StructRef}
 */
proto.api_spec.StructRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.StructRef.FullStructRef;
      reader.readMessage(value,proto.api_spec.StructRef.FullStructRef.deserializeBinaryFromReader);
      msg.setFullStruct(value);
      break;
    case 2:
      var value = new proto.api_spec.NamedDataRef;
      reader.readMessage(value,proto.api_spec.NamedDataRef.deserializeBinaryFromReader);
      msg.setFieldRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.StructRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.StructRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.StructRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullStruct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.StructRef.FullStructRef.serializeBinaryToWriter
    );
  }
  f = message.getFieldRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.NamedDataRef.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.StructRef.FullStructRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.StructRef.FullStructRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.StructRef.FullStructRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.FullStructRef.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.StructRef.FullStructRef}
 */
proto.api_spec.StructRef.FullStructRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.StructRef.FullStructRef;
  return proto.api_spec.StructRef.FullStructRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.StructRef.FullStructRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.StructRef.FullStructRef}
 */
proto.api_spec.StructRef.FullStructRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.StructRef.FullStructRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.StructRef.FullStructRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.StructRef.FullStructRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.FullStructRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional FullStructRef full_struct = 1;
 * @return {?proto.api_spec.StructRef.FullStructRef}
 */
proto.api_spec.StructRef.prototype.getFullStruct = function() {
  return /** @type{?proto.api_spec.StructRef.FullStructRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.StructRef.FullStructRef, 1));
};


/**
 * @param {?proto.api_spec.StructRef.FullStructRef|undefined} value
 * @return {!proto.api_spec.StructRef} returns this
*/
proto.api_spec.StructRef.prototype.setFullStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.StructRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.StructRef} returns this
 */
proto.api_spec.StructRef.prototype.clearFullStruct = function() {
  return this.setFullStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.StructRef.prototype.hasFullStruct = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NamedDataRef field_ref = 2;
 * @return {?proto.api_spec.NamedDataRef}
 */
proto.api_spec.StructRef.prototype.getFieldRef = function() {
  return /** @type{?proto.api_spec.NamedDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.NamedDataRef, 2));
};


/**
 * @param {?proto.api_spec.NamedDataRef|undefined} value
 * @return {!proto.api_spec.StructRef} returns this
*/
proto.api_spec.StructRef.prototype.setFieldRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.StructRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.StructRef} returns this
 */
proto.api_spec.StructRef.prototype.clearFieldRef = function() {
  return this.setFieldRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.StructRef.prototype.hasFieldRef = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.ListRef.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.ListRef.RefCase = {
  REF_NOT_SET: 0,
  FULL_LIST: 1,
  ELEM_REF: 2
};

/**
 * @return {proto.api_spec.ListRef.RefCase}
 */
proto.api_spec.ListRef.prototype.getRefCase = function() {
  return /** @type {proto.api_spec.ListRef.RefCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.ListRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.ListRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.ListRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.ListRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullList: (f = msg.getFullList()) && proto.api_spec.ListRef.FullListRef.toObject(includeInstance, f),
    elemRef: (f = msg.getElemRef()) && proto.api_spec.IndexedDataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.ListRef}
 */
proto.api_spec.ListRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.ListRef;
  return proto.api_spec.ListRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.ListRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.ListRef}
 */
proto.api_spec.ListRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.ListRef.FullListRef;
      reader.readMessage(value,proto.api_spec.ListRef.FullListRef.deserializeBinaryFromReader);
      msg.setFullList(value);
      break;
    case 2:
      var value = new proto.api_spec.IndexedDataRef;
      reader.readMessage(value,proto.api_spec.IndexedDataRef.deserializeBinaryFromReader);
      msg.setElemRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.ListRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.ListRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.ListRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.ListRef.FullListRef.serializeBinaryToWriter
    );
  }
  f = message.getElemRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.IndexedDataRef.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.ListRef.FullListRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.ListRef.FullListRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.ListRef.FullListRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.FullListRef.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.ListRef.FullListRef}
 */
proto.api_spec.ListRef.FullListRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.ListRef.FullListRef;
  return proto.api_spec.ListRef.FullListRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.ListRef.FullListRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.ListRef.FullListRef}
 */
proto.api_spec.ListRef.FullListRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.ListRef.FullListRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.ListRef.FullListRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.ListRef.FullListRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.FullListRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional FullListRef full_list = 1;
 * @return {?proto.api_spec.ListRef.FullListRef}
 */
proto.api_spec.ListRef.prototype.getFullList = function() {
  return /** @type{?proto.api_spec.ListRef.FullListRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.ListRef.FullListRef, 1));
};


/**
 * @param {?proto.api_spec.ListRef.FullListRef|undefined} value
 * @return {!proto.api_spec.ListRef} returns this
*/
proto.api_spec.ListRef.prototype.setFullList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.ListRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.ListRef} returns this
 */
proto.api_spec.ListRef.prototype.clearFullList = function() {
  return this.setFullList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.ListRef.prototype.hasFullList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional IndexedDataRef elem_ref = 2;
 * @return {?proto.api_spec.IndexedDataRef}
 */
proto.api_spec.ListRef.prototype.getElemRef = function() {
  return /** @type{?proto.api_spec.IndexedDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.IndexedDataRef, 2));
};


/**
 * @param {?proto.api_spec.IndexedDataRef|undefined} value
 * @return {!proto.api_spec.ListRef} returns this
*/
proto.api_spec.ListRef.prototype.setElemRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.ListRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.ListRef} returns this
 */
proto.api_spec.ListRef.prototype.clearElemRef = function() {
  return this.setElemRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.ListRef.prototype.hasElemRef = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.DataRef.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.api_spec.DataRef.ValueRefCase = {
  VALUE_REF_NOT_SET: 0,
  PRIMITIVE_REF: 1,
  STRUCT_REF: 2,
  LIST_REF: 3
};

/**
 * @return {proto.api_spec.DataRef.ValueRefCase}
 */
proto.api_spec.DataRef.prototype.getValueRefCase = function() {
  return /** @type {proto.api_spec.DataRef.ValueRefCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.DataRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.DataRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.DataRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.DataRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    primitiveRef: (f = msg.getPrimitiveRef()) && proto.api_spec.PrimitiveRef.toObject(includeInstance, f),
    structRef: (f = msg.getStructRef()) && proto.api_spec.StructRef.toObject(includeInstance, f),
    listRef: (f = msg.getListRef()) && proto.api_spec.ListRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.DataRef}
 */
proto.api_spec.DataRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.DataRef;
  return proto.api_spec.DataRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.DataRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.DataRef}
 */
proto.api_spec.DataRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.PrimitiveRef;
      reader.readMessage(value,proto.api_spec.PrimitiveRef.deserializeBinaryFromReader);
      msg.setPrimitiveRef(value);
      break;
    case 2:
      var value = new proto.api_spec.StructRef;
      reader.readMessage(value,proto.api_spec.StructRef.deserializeBinaryFromReader);
      msg.setStructRef(value);
      break;
    case 3:
      var value = new proto.api_spec.ListRef;
      reader.readMessage(value,proto.api_spec.ListRef.deserializeBinaryFromReader);
      msg.setListRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.DataRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.DataRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.DataRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimitiveRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.PrimitiveRef.serializeBinaryToWriter
    );
  }
  f = message.getStructRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.StructRef.serializeBinaryToWriter
    );
  }
  f = message.getListRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.ListRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional PrimitiveRef primitive_ref = 1;
 * @return {?proto.api_spec.PrimitiveRef}
 */
proto.api_spec.DataRef.prototype.getPrimitiveRef = function() {
  return /** @type{?proto.api_spec.PrimitiveRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.PrimitiveRef, 1));
};


/**
 * @param {?proto.api_spec.PrimitiveRef|undefined} value
 * @return {!proto.api_spec.DataRef} returns this
*/
proto.api_spec.DataRef.prototype.setPrimitiveRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.DataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataRef} returns this
 */
proto.api_spec.DataRef.prototype.clearPrimitiveRef = function() {
  return this.setPrimitiveRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataRef.prototype.hasPrimitiveRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StructRef struct_ref = 2;
 * @return {?proto.api_spec.StructRef}
 */
proto.api_spec.DataRef.prototype.getStructRef = function() {
  return /** @type{?proto.api_spec.StructRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.StructRef, 2));
};


/**
 * @param {?proto.api_spec.StructRef|undefined} value
 * @return {!proto.api_spec.DataRef} returns this
*/
proto.api_spec.DataRef.prototype.setStructRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.DataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataRef} returns this
 */
proto.api_spec.DataRef.prototype.clearStructRef = function() {
  return this.setStructRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataRef.prototype.hasStructRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListRef list_ref = 3;
 * @return {?proto.api_spec.ListRef}
 */
proto.api_spec.DataRef.prototype.getListRef = function() {
  return /** @type{?proto.api_spec.ListRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.ListRef, 3));
};


/**
 * @param {?proto.api_spec.ListRef|undefined} value
 * @return {!proto.api_spec.DataRef} returns this
*/
proto.api_spec.DataRef.prototype.setListRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.DataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataRef} returns this
 */
proto.api_spec.DataRef.prototype.clearListRef = function() {
  return this.setListRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataRef.prototype.hasListRef = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.MethodDataRef.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.api_spec.MethodDataRef.RefCase = {
  REF_NOT_SET: 0,
  ARG_REF: 2,
  RESPONSE_REF: 3
};

/**
 * @return {proto.api_spec.MethodDataRef.RefCase}
 */
proto.api_spec.MethodDataRef.prototype.getRefCase = function() {
  return /** @type {proto.api_spec.MethodDataRef.RefCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.MethodDataRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.MethodDataRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.MethodDataRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.MethodDataRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodDataRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    methodIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    argRef: (f = msg.getArgRef()) && proto.api_spec.NamedDataRef.toObject(includeInstance, f),
    responseRef: (f = msg.getResponseRef()) && proto.api_spec.NamedDataRef.toObject(includeInstance, f),
    akitaAnnotations: (f = msg.getAkitaAnnotations()) && types_pb.AkitaAnnotations.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.MethodDataRef}
 */
proto.api_spec.MethodDataRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.MethodDataRef;
  return proto.api_spec.MethodDataRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.MethodDataRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.MethodDataRef}
 */
proto.api_spec.MethodDataRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMethodIndex(value);
      break;
    case 2:
      var value = new proto.api_spec.NamedDataRef;
      reader.readMessage(value,proto.api_spec.NamedDataRef.deserializeBinaryFromReader);
      msg.setArgRef(value);
      break;
    case 3:
      var value = new proto.api_spec.NamedDataRef;
      reader.readMessage(value,proto.api_spec.NamedDataRef.deserializeBinaryFromReader);
      msg.setResponseRef(value);
      break;
    case 11:
      var value = new types_pb.AkitaAnnotations;
      reader.readMessage(value,types_pb.AkitaAnnotations.deserializeBinaryFromReader);
      msg.setAkitaAnnotations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.MethodDataRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.MethodDataRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.MethodDataRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodDataRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethodIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getArgRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.NamedDataRef.serializeBinaryToWriter
    );
  }
  f = message.getResponseRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.NamedDataRef.serializeBinaryToWriter
    );
  }
  f = message.getAkitaAnnotations();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      types_pb.AkitaAnnotations.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 method_index = 1;
 * @return {number}
 */
proto.api_spec.MethodDataRef.prototype.getMethodIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.MethodDataRef} returns this
 */
proto.api_spec.MethodDataRef.prototype.setMethodIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional NamedDataRef arg_ref = 2;
 * @return {?proto.api_spec.NamedDataRef}
 */
proto.api_spec.MethodDataRef.prototype.getArgRef = function() {
  return /** @type{?proto.api_spec.NamedDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.NamedDataRef, 2));
};


/**
 * @param {?proto.api_spec.NamedDataRef|undefined} value
 * @return {!proto.api_spec.MethodDataRef} returns this
*/
proto.api_spec.MethodDataRef.prototype.setArgRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.MethodDataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MethodDataRef} returns this
 */
proto.api_spec.MethodDataRef.prototype.clearArgRef = function() {
  return this.setArgRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MethodDataRef.prototype.hasArgRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NamedDataRef response_ref = 3;
 * @return {?proto.api_spec.NamedDataRef}
 */
proto.api_spec.MethodDataRef.prototype.getResponseRef = function() {
  return /** @type{?proto.api_spec.NamedDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.NamedDataRef, 3));
};


/**
 * @param {?proto.api_spec.NamedDataRef|undefined} value
 * @return {!proto.api_spec.MethodDataRef} returns this
*/
proto.api_spec.MethodDataRef.prototype.setResponseRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.MethodDataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MethodDataRef} returns this
 */
proto.api_spec.MethodDataRef.prototype.clearResponseRef = function() {
  return this.setResponseRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MethodDataRef.prototype.hasResponseRef = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AkitaAnnotations akita_annotations = 11;
 * @return {?proto.api_spec.AkitaAnnotations}
 */
proto.api_spec.MethodDataRef.prototype.getAkitaAnnotations = function() {
  return /** @type{?proto.api_spec.AkitaAnnotations} */ (
    jspb.Message.getWrapperField(this, types_pb.AkitaAnnotations, 11));
};


/**
 * @param {?proto.api_spec.AkitaAnnotations|undefined} value
 * @return {!proto.api_spec.MethodDataRef} returns this
*/
proto.api_spec.MethodDataRef.prototype.setAkitaAnnotations = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MethodDataRef} returns this
 */
proto.api_spec.MethodDataRef.prototype.clearAkitaAnnotations = function() {
  return this.setAkitaAnnotations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MethodDataRef.prototype.hasAkitaAnnotations = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.StructTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.StructTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.StructTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldTemplatesMap: (f = msg.getFieldTemplatesMap()) ? f.toObject(includeInstance, proto.api_spec.DataTemplate.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.StructTemplate}
 */
proto.api_spec.StructTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.StructTemplate;
  return proto.api_spec.StructTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.StructTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.StructTemplate}
 */
proto.api_spec.StructTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFieldTemplatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.DataTemplate.deserializeBinaryFromReader, "", new proto.api_spec.DataTemplate());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.StructTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.StructTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.StructTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldTemplatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.DataTemplate.serializeBinaryToWriter);
  }
};


/**
 * map<string, DataTemplate> field_templates = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.DataTemplate>}
 */
proto.api_spec.StructTemplate.prototype.getFieldTemplatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.DataTemplate>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api_spec.DataTemplate));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.StructTemplate} returns this
 */
proto.api_spec.StructTemplate.prototype.clearFieldTemplatesMap = function() {
  this.getFieldTemplatesMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_spec.ListTemplate.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.ListTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.ListTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.ListTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    elemTemplatesList: jspb.Message.toObjectList(msg.getElemTemplatesList(),
    proto.api_spec.DataTemplate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.ListTemplate}
 */
proto.api_spec.ListTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.ListTemplate;
  return proto.api_spec.ListTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.ListTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.ListTemplate}
 */
proto.api_spec.ListTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.DataTemplate;
      reader.readMessage(value,proto.api_spec.DataTemplate.deserializeBinaryFromReader);
      msg.addElemTemplates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.ListTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.ListTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.ListTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElemTemplatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_spec.DataTemplate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DataTemplate elem_templates = 1;
 * @return {!Array<!proto.api_spec.DataTemplate>}
 */
proto.api_spec.ListTemplate.prototype.getElemTemplatesList = function() {
  return /** @type{!Array<!proto.api_spec.DataTemplate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_spec.DataTemplate, 1));
};


/**
 * @param {!Array<!proto.api_spec.DataTemplate>} value
 * @return {!proto.api_spec.ListTemplate} returns this
*/
proto.api_spec.ListTemplate.prototype.setElemTemplatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_spec.DataTemplate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_spec.DataTemplate}
 */
proto.api_spec.ListTemplate.prototype.addElemTemplates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_spec.DataTemplate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api_spec.ListTemplate} returns this
 */
proto.api_spec.ListTemplate.prototype.clearElemTemplatesList = function() {
  return this.setElemTemplatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.OptionalTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.OptionalTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.OptionalTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OptionalTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueTemplate: (f = msg.getValueTemplate()) && proto.api_spec.DataTemplate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.OptionalTemplate}
 */
proto.api_spec.OptionalTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.OptionalTemplate;
  return proto.api_spec.OptionalTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.OptionalTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.OptionalTemplate}
 */
proto.api_spec.OptionalTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.DataTemplate;
      reader.readMessage(value,proto.api_spec.DataTemplate.deserializeBinaryFromReader);
      msg.setValueTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.OptionalTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.OptionalTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.OptionalTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OptionalTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueTemplate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.DataTemplate.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataTemplate value_template = 1;
 * @return {?proto.api_spec.DataTemplate}
 */
proto.api_spec.OptionalTemplate.prototype.getValueTemplate = function() {
  return /** @type{?proto.api_spec.DataTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataTemplate, 1));
};


/**
 * @param {?proto.api_spec.DataTemplate|undefined} value
 * @return {!proto.api_spec.OptionalTemplate} returns this
*/
proto.api_spec.OptionalTemplate.prototype.setValueTemplate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.OptionalTemplate} returns this
 */
proto.api_spec.OptionalTemplate.prototype.clearValueTemplate = function() {
  return this.setValueTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.OptionalTemplate.prototype.hasValueTemplate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.DataTemplate.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.api_spec.DataTemplate.ValueTemplateCase = {
  VALUE_TEMPLATE_NOT_SET: 0,
  STRUCT_TEMPLATE: 1,
  LIST_TEMPLATE: 2,
  VALUE: 3,
  REF: 4,
  OPTIONAL_TEMPLATE: 5
};

/**
 * @return {proto.api_spec.DataTemplate.ValueTemplateCase}
 */
proto.api_spec.DataTemplate.prototype.getValueTemplateCase = function() {
  return /** @type {proto.api_spec.DataTemplate.ValueTemplateCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.DataTemplate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.DataTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.DataTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.DataTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    structTemplate: (f = msg.getStructTemplate()) && proto.api_spec.StructTemplate.toObject(includeInstance, f),
    listTemplate: (f = msg.getListTemplate()) && proto.api_spec.ListTemplate.toObject(includeInstance, f),
    value: (f = msg.getValue()) && method_pb.Data.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && proto.api_spec.MethodDataRef.toObject(includeInstance, f),
    optionalTemplate: (f = msg.getOptionalTemplate()) && proto.api_spec.OptionalTemplate.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && method_pb.DataMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.DataTemplate}
 */
proto.api_spec.DataTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.DataTemplate;
  return proto.api_spec.DataTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.DataTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.DataTemplate}
 */
proto.api_spec.DataTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.StructTemplate;
      reader.readMessage(value,proto.api_spec.StructTemplate.deserializeBinaryFromReader);
      msg.setStructTemplate(value);
      break;
    case 2:
      var value = new proto.api_spec.ListTemplate;
      reader.readMessage(value,proto.api_spec.ListTemplate.deserializeBinaryFromReader);
      msg.setListTemplate(value);
      break;
    case 3:
      var value = new method_pb.Data;
      reader.readMessage(value,method_pb.Data.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 4:
      var value = new proto.api_spec.MethodDataRef;
      reader.readMessage(value,proto.api_spec.MethodDataRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 5:
      var value = new proto.api_spec.OptionalTemplate;
      reader.readMessage(value,proto.api_spec.OptionalTemplate.deserializeBinaryFromReader);
      msg.setOptionalTemplate(value);
      break;
    case 6:
      var value = new method_pb.DataMeta;
      reader.readMessage(value,method_pb.DataMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.DataTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.DataTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.DataTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStructTemplate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.StructTemplate.serializeBinaryToWriter
    );
  }
  f = message.getListTemplate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.ListTemplate.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      method_pb.Data.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.MethodDataRef.serializeBinaryToWriter
    );
  }
  f = message.getOptionalTemplate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_spec.OptionalTemplate.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      method_pb.DataMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional StructTemplate struct_template = 1;
 * @return {?proto.api_spec.StructTemplate}
 */
proto.api_spec.DataTemplate.prototype.getStructTemplate = function() {
  return /** @type{?proto.api_spec.StructTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.StructTemplate, 1));
};


/**
 * @param {?proto.api_spec.StructTemplate|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setStructTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearStructTemplate = function() {
  return this.setStructTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasStructTemplate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListTemplate list_template = 2;
 * @return {?proto.api_spec.ListTemplate}
 */
proto.api_spec.DataTemplate.prototype.getListTemplate = function() {
  return /** @type{?proto.api_spec.ListTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.ListTemplate, 2));
};


/**
 * @param {?proto.api_spec.ListTemplate|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setListTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearListTemplate = function() {
  return this.setListTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasListTemplate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Data value = 3;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.DataTemplate.prototype.getValue = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, method_pb.Data, 3));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MethodDataRef ref = 4;
 * @return {?proto.api_spec.MethodDataRef}
 */
proto.api_spec.DataTemplate.prototype.getRef = function() {
  return /** @type{?proto.api_spec.MethodDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.MethodDataRef, 4));
};


/**
 * @param {?proto.api_spec.MethodDataRef|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearRef = function() {
  return this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasRef = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OptionalTemplate optional_template = 5;
 * @return {?proto.api_spec.OptionalTemplate}
 */
proto.api_spec.DataTemplate.prototype.getOptionalTemplate = function() {
  return /** @type{?proto.api_spec.OptionalTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.OptionalTemplate, 5));
};


/**
 * @param {?proto.api_spec.OptionalTemplate|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setOptionalTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearOptionalTemplate = function() {
  return this.setOptionalTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasOptionalTemplate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DataMeta meta = 6;
 * @return {?proto.api_spec.DataMeta}
 */
proto.api_spec.DataTemplate.prototype.getMeta = function() {
  return /** @type{?proto.api_spec.DataMeta} */ (
    jspb.Message.getWrapperField(this, method_pb.DataMeta, 6));
};


/**
 * @param {?proto.api_spec.DataMeta|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.MethodTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.MethodTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.MethodTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    methodId: (f = msg.getMethodId()) && method_pb.MethodID.toObject(includeInstance, f),
    argTemplatesMap: (f = msg.getArgTemplatesMap()) ? f.toObject(includeInstance, proto.api_spec.DataTemplate.toObject) : [],
    responsesMap: (f = msg.getResponsesMap()) ? f.toObject(includeInstance, proto.api_spec.Data.toObject) : [],
    meta: (f = msg.getMeta()) && method_pb.MethodMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.MethodTemplate}
 */
proto.api_spec.MethodTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.MethodTemplate;
  return proto.api_spec.MethodTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.MethodTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.MethodTemplate}
 */
proto.api_spec.MethodTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new method_pb.MethodID;
      reader.readMessage(value,method_pb.MethodID.deserializeBinaryFromReader);
      msg.setMethodId(value);
      break;
    case 3:
      var value = msg.getArgTemplatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.DataTemplate.deserializeBinaryFromReader, "", new proto.api_spec.DataTemplate());
         });
      break;
    case 4:
      var value = msg.getResponsesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.Data.deserializeBinaryFromReader, "", new proto.api_spec.Data());
         });
      break;
    case 5:
      var value = new method_pb.MethodMeta;
      reader.readMessage(value,method_pb.MethodMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.MethodTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.MethodTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.MethodTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethodId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      method_pb.MethodID.serializeBinaryToWriter
    );
  }
  f = message.getArgTemplatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.DataTemplate.serializeBinaryToWriter);
  }
  f = message.getResponsesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.Data.serializeBinaryToWriter);
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      method_pb.MethodMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api_spec.MethodTemplate.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.MethodTemplate} returns this
 */
proto.api_spec.MethodTemplate.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MethodID method_id = 2;
 * @return {?proto.api_spec.MethodID}
 */
proto.api_spec.MethodTemplate.prototype.getMethodId = function() {
  return /** @type{?proto.api_spec.MethodID} */ (
    jspb.Message.getWrapperField(this, method_pb.MethodID, 2));
};


/**
 * @param {?proto.api_spec.MethodID|undefined} value
 * @return {!proto.api_spec.MethodTemplate} returns this
*/
proto.api_spec.MethodTemplate.prototype.setMethodId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MethodTemplate} returns this
 */
proto.api_spec.MethodTemplate.prototype.clearMethodId = function() {
  return this.setMethodId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MethodTemplate.prototype.hasMethodId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, DataTemplate> arg_templates = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.DataTemplate>}
 */
proto.api_spec.MethodTemplate.prototype.getArgTemplatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.DataTemplate>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.api_spec.DataTemplate));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.MethodTemplate} returns this
 */
proto.api_spec.MethodTemplate.prototype.clearArgTemplatesMap = function() {
  this.getArgTemplatesMap().clear();
  return this;
};


/**
 * map<string, Data> responses = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.Data>}
 */
proto.api_spec.MethodTemplate.prototype.getResponsesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.Data>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.api_spec.Data));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.MethodTemplate} returns this
 */
proto.api_spec.MethodTemplate.prototype.clearResponsesMap = function() {
  this.getResponsesMap().clear();
  return this;
};


/**
 * optional MethodMeta meta = 5;
 * @return {?proto.api_spec.MethodMeta}
 */
proto.api_spec.MethodTemplate.prototype.getMeta = function() {
  return /** @type{?proto.api_spec.MethodMeta} */ (
    jspb.Message.getWrapperField(this, method_pb.MethodMeta, 5));
};


/**
 * @param {?proto.api_spec.MethodMeta|undefined} value
 * @return {!proto.api_spec.MethodTemplate} returns this
*/
proto.api_spec.MethodTemplate.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MethodTemplate} returns this
 */
proto.api_spec.MethodTemplate.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MethodTemplate.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_spec.Sequence.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Sequence.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Sequence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Sequence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Sequence.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    methodTemplatesList: jspb.Message.toObjectList(msg.getMethodTemplatesList(),
    proto.api_spec.MethodTemplate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Sequence}
 */
proto.api_spec.Sequence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Sequence;
  return proto.api_spec.Sequence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Sequence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Sequence}
 */
proto.api_spec.Sequence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.api_spec.MethodTemplate;
      reader.readMessage(value,proto.api_spec.MethodTemplate.deserializeBinaryFromReader);
      msg.addMethodTemplates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Sequence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Sequence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Sequence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Sequence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethodTemplatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api_spec.MethodTemplate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api_spec.Sequence.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.Sequence} returns this
 */
proto.api_spec.Sequence.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated MethodTemplate method_templates = 2;
 * @return {!Array<!proto.api_spec.MethodTemplate>}
 */
proto.api_spec.Sequence.prototype.getMethodTemplatesList = function() {
  return /** @type{!Array<!proto.api_spec.MethodTemplate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_spec.MethodTemplate, 2));
};


/**
 * @param {!Array<!proto.api_spec.MethodTemplate>} value
 * @return {!proto.api_spec.Sequence} returns this
*/
proto.api_spec.Sequence.prototype.setMethodTemplatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api_spec.MethodTemplate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_spec.MethodTemplate}
 */
proto.api_spec.Sequence.prototype.addMethodTemplates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api_spec.MethodTemplate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api_spec.Sequence} returns this
 */
proto.api_spec.Sequence.prototype.clearMethodTemplatesList = function() {
  return this.setMethodTemplatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.SequenceRun.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.SequenceRun.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.SequenceRun} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.SequenceRun.toObject = function(includeInstance, msg) {
  var f, obj = {
    seq: (f = msg.getSeq()) && proto.api_spec.Sequence.toObject(includeInstance, f),
    rerunAttempt: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.SequenceRun}
 */
proto.api_spec.SequenceRun.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.SequenceRun;
  return proto.api_spec.SequenceRun.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.SequenceRun} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.SequenceRun}
 */
proto.api_spec.SequenceRun.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Sequence;
      reader.readMessage(value,proto.api_spec.Sequence.deserializeBinaryFromReader);
      msg.setSeq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRerunAttempt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.SequenceRun.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.SequenceRun.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.SequenceRun} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.SequenceRun.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.Sequence.serializeBinaryToWriter
    );
  }
  f = message.getRerunAttempt();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional Sequence seq = 1;
 * @return {?proto.api_spec.Sequence}
 */
proto.api_spec.SequenceRun.prototype.getSeq = function() {
  return /** @type{?proto.api_spec.Sequence} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Sequence, 1));
};


/**
 * @param {?proto.api_spec.Sequence|undefined} value
 * @return {!proto.api_spec.SequenceRun} returns this
*/
proto.api_spec.SequenceRun.prototype.setSeq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.SequenceRun} returns this
 */
proto.api_spec.SequenceRun.prototype.clearSeq = function() {
  return this.setSeq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.SequenceRun.prototype.hasSeq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 rerun_attempt = 2;
 * @return {number}
 */
proto.api_spec.SequenceRun.prototype.getRerunAttempt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.SequenceRun} returns this
 */
proto.api_spec.SequenceRun.prototype.setRerunAttempt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.api_spec);
