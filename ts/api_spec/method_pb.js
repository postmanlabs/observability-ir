// source: method.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_type_pb = require('./api_type_pb.js');
goog.object.extend(proto, api_type_pb);
var types_pb = require('./types_pb.js');
goog.object.extend(proto, types_pb);
goog.exportSymbol('proto.api_spec.Bool', null, global);
goog.exportSymbol('proto.api_spec.Bytes', null, global);
goog.exportSymbol('proto.api_spec.Data', null, global);
goog.exportSymbol('proto.api_spec.Data.ValueCase', null, global);
goog.exportSymbol('proto.api_spec.DataMeta', null, global);
goog.exportSymbol('proto.api_spec.DataMeta.MetaCase', null, global);
goog.exportSymbol('proto.api_spec.Double', null, global);
goog.exportSymbol('proto.api_spec.ExampleValue', null, global);
goog.exportSymbol('proto.api_spec.Float', null, global);
goog.exportSymbol('proto.api_spec.GRPCMeta', null, global);
goog.exportSymbol('proto.api_spec.GRPCMethodMeta', null, global);
goog.exportSymbol('proto.api_spec.HTTPAuth', null, global);
goog.exportSymbol('proto.api_spec.HTTPAuth.HTTPAuthType', null, global);
goog.exportSymbol('proto.api_spec.HTTPBody', null, global);
goog.exportSymbol('proto.api_spec.HTTPBody.ContentType', null, global);
goog.exportSymbol('proto.api_spec.HTTPCookie', null, global);
goog.exportSymbol('proto.api_spec.HTTPEmpty', null, global);
goog.exportSymbol('proto.api_spec.HTTPHeader', null, global);
goog.exportSymbol('proto.api_spec.HTTPMeta', null, global);
goog.exportSymbol('proto.api_spec.HTTPMeta.LocationCase', null, global);
goog.exportSymbol('proto.api_spec.HTTPMethodMeta', null, global);
goog.exportSymbol('proto.api_spec.HTTPMethodMeta.Obfuscation', null, global);
goog.exportSymbol('proto.api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm', null, global);
goog.exportSymbol('proto.api_spec.HTTPMultipart', null, global);
goog.exportSymbol('proto.api_spec.HTTPPath', null, global);
goog.exportSymbol('proto.api_spec.HTTPQuery', null, global);
goog.exportSymbol('proto.api_spec.Int32', null, global);
goog.exportSymbol('proto.api_spec.Int64', null, global);
goog.exportSymbol('proto.api_spec.List', null, global);
goog.exportSymbol('proto.api_spec.MapData', null, global);
goog.exportSymbol('proto.api_spec.Method', null, global);
goog.exportSymbol('proto.api_spec.MethodID', null, global);
goog.exportSymbol('proto.api_spec.MethodMeta', null, global);
goog.exportSymbol('proto.api_spec.MethodMeta.MetaCase', null, global);
goog.exportSymbol('proto.api_spec.None', null, global);
goog.exportSymbol('proto.api_spec.OneOf', null, global);
goog.exportSymbol('proto.api_spec.Optional', null, global);
goog.exportSymbol('proto.api_spec.Optional.ValueCase', null, global);
goog.exportSymbol('proto.api_spec.Primitive', null, global);
goog.exportSymbol('proto.api_spec.Primitive.ValueCase', null, global);
goog.exportSymbol('proto.api_spec.String', null, global);
goog.exportSymbol('proto.api_spec.Struct', null, global);
goog.exportSymbol('proto.api_spec.Uint32', null, global);
goog.exportSymbol('proto.api_spec.Uint64', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Bool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Bool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Bool.displayName = 'proto.api_spec.Bool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Bytes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Bytes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Bytes.displayName = 'proto.api_spec.Bytes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.String = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.String, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.String.displayName = 'proto.api_spec.String';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Int32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Int32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Int32.displayName = 'proto.api_spec.Int32';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Int64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Int64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Int64.displayName = 'proto.api_spec.Int64';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Uint32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Uint32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Uint32.displayName = 'proto.api_spec.Uint32';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Uint64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Uint64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Uint64.displayName = 'proto.api_spec.Uint64';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Double = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Double, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Double.displayName = 'proto.api_spec.Double';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Float = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Float, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Float.displayName = 'proto.api_spec.Float';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Primitive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.Primitive.oneofGroups_);
};
goog.inherits(proto.api_spec.Primitive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Primitive.displayName = 'proto.api_spec.Primitive';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_spec.List.repeatedFields_, null);
};
goog.inherits(proto.api_spec.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.List.displayName = 'proto.api_spec.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Struct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Struct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Struct.displayName = 'proto.api_spec.Struct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.MapData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.MapData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.MapData.displayName = 'proto.api_spec.MapData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.None = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.None, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.None.displayName = 'proto.api_spec.None';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Optional = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.Optional.oneofGroups_);
};
goog.inherits(proto.api_spec.Optional, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Optional.displayName = 'proto.api_spec.Optional';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.OneOf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.OneOf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.OneOf.displayName = 'proto.api_spec.OneOf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.GRPCMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.GRPCMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.GRPCMeta.displayName = 'proto.api_spec.GRPCMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPPath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPPath.displayName = 'proto.api_spec.HTTPPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPQuery.displayName = 'proto.api_spec.HTTPQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPHeader.displayName = 'proto.api_spec.HTTPHeader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPAuth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPAuth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPAuth.displayName = 'proto.api_spec.HTTPAuth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPCookie = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPCookie, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPCookie.displayName = 'proto.api_spec.HTTPCookie';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPBody.displayName = 'proto.api_spec.HTTPBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPMultipart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPMultipart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPMultipart.displayName = 'proto.api_spec.HTTPMultipart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPEmpty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPEmpty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPEmpty.displayName = 'proto.api_spec.HTTPEmpty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.HTTPMeta.oneofGroups_);
};
goog.inherits(proto.api_spec.HTTPMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPMeta.displayName = 'proto.api_spec.HTTPMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.DataMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.DataMeta.oneofGroups_);
};
goog.inherits(proto.api_spec.DataMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.DataMeta.displayName = 'proto.api_spec.DataMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.ExampleValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.ExampleValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.ExampleValue.displayName = 'proto.api_spec.ExampleValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.Data.oneofGroups_);
};
goog.inherits(proto.api_spec.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Data.displayName = 'proto.api_spec.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.MethodID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.MethodID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.MethodID.displayName = 'proto.api_spec.MethodID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.GRPCMethodMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.GRPCMethodMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.GRPCMethodMeta.displayName = 'proto.api_spec.GRPCMethodMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.HTTPMethodMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.HTTPMethodMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.HTTPMethodMeta.displayName = 'proto.api_spec.HTTPMethodMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.MethodMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.MethodMeta.oneofGroups_);
};
goog.inherits(proto.api_spec.MethodMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.MethodMeta.displayName = 'proto.api_spec.MethodMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Method = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Method, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Method.displayName = 'proto.api_spec.Method';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Bool.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Bool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Bool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Bool.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.BoolType.toObject(includeInstance, f),
    value: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Bool}
 */
proto.api_spec.Bool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Bool;
  return proto.api_spec.Bool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Bool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Bool}
 */
proto.api_spec.Bool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.BoolType;
      reader.readMessage(value,types_pb.BoolType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Bool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Bool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Bool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Bool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.BoolType.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional BoolType type = 1;
 * @return {?proto.api_spec.BoolType}
 */
proto.api_spec.Bool.prototype.getType = function() {
  return /** @type{?proto.api_spec.BoolType} */ (
    jspb.Message.getWrapperField(this, types_pb.BoolType, 1));
};


/**
 * @param {?proto.api_spec.BoolType|undefined} value
 * @return {!proto.api_spec.Bool} returns this
*/
proto.api_spec.Bool.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Bool} returns this
 */
proto.api_spec.Bool.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Bool.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool value = 2;
 * @return {boolean}
 */
proto.api_spec.Bool.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api_spec.Bool} returns this
 */
proto.api_spec.Bool.prototype.setValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Bytes.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Bytes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Bytes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Bytes.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.BytesType.toObject(includeInstance, f),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Bytes}
 */
proto.api_spec.Bytes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Bytes;
  return proto.api_spec.Bytes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Bytes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Bytes}
 */
proto.api_spec.Bytes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.BytesType;
      reader.readMessage(value,types_pb.BytesType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Bytes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Bytes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Bytes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Bytes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.BytesType.serializeBinaryToWriter
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional BytesType type = 1;
 * @return {?proto.api_spec.BytesType}
 */
proto.api_spec.Bytes.prototype.getType = function() {
  return /** @type{?proto.api_spec.BytesType} */ (
    jspb.Message.getWrapperField(this, types_pb.BytesType, 1));
};


/**
 * @param {?proto.api_spec.BytesType|undefined} value
 * @return {!proto.api_spec.Bytes} returns this
*/
proto.api_spec.Bytes.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Bytes} returns this
 */
proto.api_spec.Bytes.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Bytes.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes value = 2;
 * @return {!(string|Uint8Array)}
 */
proto.api_spec.Bytes.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.api_spec.Bytes.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.api_spec.Bytes.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api_spec.Bytes} returns this
 */
proto.api_spec.Bytes.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.String.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.String.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.String} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.String.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.StringType.toObject(includeInstance, f),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.String}
 */
proto.api_spec.String.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.String;
  return proto.api_spec.String.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.String} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.String}
 */
proto.api_spec.String.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.StringType;
      reader.readMessage(value,types_pb.StringType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.String.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.String.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.String} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.String.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.StringType.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional StringType type = 1;
 * @return {?proto.api_spec.StringType}
 */
proto.api_spec.String.prototype.getType = function() {
  return /** @type{?proto.api_spec.StringType} */ (
    jspb.Message.getWrapperField(this, types_pb.StringType, 1));
};


/**
 * @param {?proto.api_spec.StringType|undefined} value
 * @return {!proto.api_spec.String} returns this
*/
proto.api_spec.String.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.String} returns this
 */
proto.api_spec.String.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.String.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api_spec.String.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.String} returns this
 */
proto.api_spec.String.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Int32.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Int32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Int32} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Int32.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.Int32Type.toObject(includeInstance, f),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Int32}
 */
proto.api_spec.Int32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Int32;
  return proto.api_spec.Int32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Int32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Int32}
 */
proto.api_spec.Int32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Int32Type;
      reader.readMessage(value,types_pb.Int32Type.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Int32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Int32.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Int32} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Int32.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.Int32Type.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional Int32Type type = 1;
 * @return {?proto.api_spec.Int32Type}
 */
proto.api_spec.Int32.prototype.getType = function() {
  return /** @type{?proto.api_spec.Int32Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Int32Type, 1));
};


/**
 * @param {?proto.api_spec.Int32Type|undefined} value
 * @return {!proto.api_spec.Int32} returns this
*/
proto.api_spec.Int32.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Int32} returns this
 */
proto.api_spec.Int32.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Int32.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 value = 2;
 * @return {number}
 */
proto.api_spec.Int32.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.Int32} returns this
 */
proto.api_spec.Int32.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Int64.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Int64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Int64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Int64.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.Int64Type.toObject(includeInstance, f),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Int64}
 */
proto.api_spec.Int64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Int64;
  return proto.api_spec.Int64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Int64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Int64}
 */
proto.api_spec.Int64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Int64Type;
      reader.readMessage(value,types_pb.Int64Type.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Int64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Int64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Int64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Int64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.Int64Type.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional Int64Type type = 1;
 * @return {?proto.api_spec.Int64Type}
 */
proto.api_spec.Int64.prototype.getType = function() {
  return /** @type{?proto.api_spec.Int64Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Int64Type, 1));
};


/**
 * @param {?proto.api_spec.Int64Type|undefined} value
 * @return {!proto.api_spec.Int64} returns this
*/
proto.api_spec.Int64.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Int64} returns this
 */
proto.api_spec.Int64.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Int64.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 value = 2;
 * @return {number}
 */
proto.api_spec.Int64.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.Int64} returns this
 */
proto.api_spec.Int64.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Uint32.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Uint32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Uint32} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Uint32.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.Uint32Type.toObject(includeInstance, f),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Uint32}
 */
proto.api_spec.Uint32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Uint32;
  return proto.api_spec.Uint32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Uint32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Uint32}
 */
proto.api_spec.Uint32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Uint32Type;
      reader.readMessage(value,types_pb.Uint32Type.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Uint32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Uint32.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Uint32} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Uint32.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.Uint32Type.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional Uint32Type type = 1;
 * @return {?proto.api_spec.Uint32Type}
 */
proto.api_spec.Uint32.prototype.getType = function() {
  return /** @type{?proto.api_spec.Uint32Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Uint32Type, 1));
};


/**
 * @param {?proto.api_spec.Uint32Type|undefined} value
 * @return {!proto.api_spec.Uint32} returns this
*/
proto.api_spec.Uint32.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Uint32} returns this
 */
proto.api_spec.Uint32.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Uint32.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 value = 2;
 * @return {number}
 */
proto.api_spec.Uint32.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.Uint32} returns this
 */
proto.api_spec.Uint32.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Uint64.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Uint64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Uint64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Uint64.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.Uint64Type.toObject(includeInstance, f),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Uint64}
 */
proto.api_spec.Uint64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Uint64;
  return proto.api_spec.Uint64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Uint64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Uint64}
 */
proto.api_spec.Uint64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Uint64Type;
      reader.readMessage(value,types_pb.Uint64Type.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Uint64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Uint64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Uint64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Uint64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.Uint64Type.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional Uint64Type type = 1;
 * @return {?proto.api_spec.Uint64Type}
 */
proto.api_spec.Uint64.prototype.getType = function() {
  return /** @type{?proto.api_spec.Uint64Type} */ (
    jspb.Message.getWrapperField(this, types_pb.Uint64Type, 1));
};


/**
 * @param {?proto.api_spec.Uint64Type|undefined} value
 * @return {!proto.api_spec.Uint64} returns this
*/
proto.api_spec.Uint64.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Uint64} returns this
 */
proto.api_spec.Uint64.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Uint64.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 value = 2;
 * @return {number}
 */
proto.api_spec.Uint64.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.Uint64} returns this
 */
proto.api_spec.Uint64.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Double.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Double.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Double} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Double.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.DoubleType.toObject(includeInstance, f),
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Double}
 */
proto.api_spec.Double.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Double;
  return proto.api_spec.Double.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Double} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Double}
 */
proto.api_spec.Double.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.DoubleType;
      reader.readMessage(value,types_pb.DoubleType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Double.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Double.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Double} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Double.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.DoubleType.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional DoubleType type = 1;
 * @return {?proto.api_spec.DoubleType}
 */
proto.api_spec.Double.prototype.getType = function() {
  return /** @type{?proto.api_spec.DoubleType} */ (
    jspb.Message.getWrapperField(this, types_pb.DoubleType, 1));
};


/**
 * @param {?proto.api_spec.DoubleType|undefined} value
 * @return {!proto.api_spec.Double} returns this
*/
proto.api_spec.Double.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Double} returns this
 */
proto.api_spec.Double.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Double.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.api_spec.Double.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.Double} returns this
 */
proto.api_spec.Double.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Float.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Float.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Float} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Float.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && types_pb.FloatType.toObject(includeInstance, f),
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Float}
 */
proto.api_spec.Float.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Float;
  return proto.api_spec.Float.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Float} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Float}
 */
proto.api_spec.Float.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.FloatType;
      reader.readMessage(value,types_pb.FloatType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Float.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Float.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Float} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Float.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.FloatType.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional FloatType type = 1;
 * @return {?proto.api_spec.FloatType}
 */
proto.api_spec.Float.prototype.getType = function() {
  return /** @type{?proto.api_spec.FloatType} */ (
    jspb.Message.getWrapperField(this, types_pb.FloatType, 1));
};


/**
 * @param {?proto.api_spec.FloatType|undefined} value
 * @return {!proto.api_spec.Float} returns this
*/
proto.api_spec.Float.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Float} returns this
 */
proto.api_spec.Float.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Float.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float value = 2;
 * @return {number}
 */
proto.api_spec.Float.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.Float} returns this
 */
proto.api_spec.Float.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.Primitive.oneofGroups_ = [[2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.api_spec.Primitive.ValueCase = {
  VALUE_NOT_SET: 0,
  BOOL_VALUE: 2,
  BYTES_VALUE: 3,
  STRING_VALUE: 4,
  INT32_VALUE: 5,
  INT64_VALUE: 6,
  UINT32_VALUE: 7,
  UINT64_VALUE: 8,
  DOUBLE_VALUE: 9,
  FLOAT_VALUE: 10
};

/**
 * @return {proto.api_spec.Primitive.ValueCase}
 */
proto.api_spec.Primitive.prototype.getValueCase = function() {
  return /** @type {proto.api_spec.Primitive.ValueCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.Primitive.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Primitive.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Primitive.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Primitive} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Primitive.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeHint: jspb.Message.getFieldWithDefault(msg, 1, ""),
    boolValue: (f = msg.getBoolValue()) && proto.api_spec.Bool.toObject(includeInstance, f),
    bytesValue: (f = msg.getBytesValue()) && proto.api_spec.Bytes.toObject(includeInstance, f),
    stringValue: (f = msg.getStringValue()) && proto.api_spec.String.toObject(includeInstance, f),
    int32Value: (f = msg.getInt32Value()) && proto.api_spec.Int32.toObject(includeInstance, f),
    int64Value: (f = msg.getInt64Value()) && proto.api_spec.Int64.toObject(includeInstance, f),
    uint32Value: (f = msg.getUint32Value()) && proto.api_spec.Uint32.toObject(includeInstance, f),
    uint64Value: (f = msg.getUint64Value()) && proto.api_spec.Uint64.toObject(includeInstance, f),
    doubleValue: (f = msg.getDoubleValue()) && proto.api_spec.Double.toObject(includeInstance, f),
    floatValue: (f = msg.getFloatValue()) && proto.api_spec.Float.toObject(includeInstance, f),
    akitaAnnotations: (f = msg.getAkitaAnnotations()) && types_pb.AkitaAnnotations.toObject(includeInstance, f),
    containsRandomValue: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    formatsMap: (f = msg.getFormatsMap()) ? f.toObject(includeInstance, undefined) : [],
    formatKind: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Primitive}
 */
proto.api_spec.Primitive.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Primitive;
  return proto.api_spec.Primitive.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Primitive} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Primitive}
 */
proto.api_spec.Primitive.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeHint(value);
      break;
    case 2:
      var value = new proto.api_spec.Bool;
      reader.readMessage(value,proto.api_spec.Bool.deserializeBinaryFromReader);
      msg.setBoolValue(value);
      break;
    case 3:
      var value = new proto.api_spec.Bytes;
      reader.readMessage(value,proto.api_spec.Bytes.deserializeBinaryFromReader);
      msg.setBytesValue(value);
      break;
    case 4:
      var value = new proto.api_spec.String;
      reader.readMessage(value,proto.api_spec.String.deserializeBinaryFromReader);
      msg.setStringValue(value);
      break;
    case 5:
      var value = new proto.api_spec.Int32;
      reader.readMessage(value,proto.api_spec.Int32.deserializeBinaryFromReader);
      msg.setInt32Value(value);
      break;
    case 6:
      var value = new proto.api_spec.Int64;
      reader.readMessage(value,proto.api_spec.Int64.deserializeBinaryFromReader);
      msg.setInt64Value(value);
      break;
    case 7:
      var value = new proto.api_spec.Uint32;
      reader.readMessage(value,proto.api_spec.Uint32.deserializeBinaryFromReader);
      msg.setUint32Value(value);
      break;
    case 8:
      var value = new proto.api_spec.Uint64;
      reader.readMessage(value,proto.api_spec.Uint64.deserializeBinaryFromReader);
      msg.setUint64Value(value);
      break;
    case 9:
      var value = new proto.api_spec.Double;
      reader.readMessage(value,proto.api_spec.Double.deserializeBinaryFromReader);
      msg.setDoubleValue(value);
      break;
    case 10:
      var value = new proto.api_spec.Float;
      reader.readMessage(value,proto.api_spec.Float.deserializeBinaryFromReader);
      msg.setFloatValue(value);
      break;
    case 11:
      var value = new types_pb.AkitaAnnotations;
      reader.readMessage(value,types_pb.AkitaAnnotations.deserializeBinaryFromReader);
      msg.setAkitaAnnotations(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContainsRandomValue(value);
      break;
    case 13:
      var value = msg.getFormatsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormatKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Primitive.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Primitive.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Primitive} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Primitive.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeHint();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBoolValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.Bool.serializeBinaryToWriter
    );
  }
  f = message.getBytesValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.Bytes.serializeBinaryToWriter
    );
  }
  f = message.getStringValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.String.serializeBinaryToWriter
    );
  }
  f = message.getInt32Value();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_spec.Int32.serializeBinaryToWriter
    );
  }
  f = message.getInt64Value();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api_spec.Int64.serializeBinaryToWriter
    );
  }
  f = message.getUint32Value();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api_spec.Uint32.serializeBinaryToWriter
    );
  }
  f = message.getUint64Value();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.api_spec.Uint64.serializeBinaryToWriter
    );
  }
  f = message.getDoubleValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.api_spec.Double.serializeBinaryToWriter
    );
  }
  f = message.getFloatValue();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.api_spec.Float.serializeBinaryToWriter
    );
  }
  f = message.getAkitaAnnotations();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      types_pb.AkitaAnnotations.serializeBinaryToWriter
    );
  }
  f = message.getContainsRandomValue();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getFormatsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getFormatKind();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string type_hint = 1;
 * @return {string}
 */
proto.api_spec.Primitive.prototype.getTypeHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.setTypeHint = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Bool bool_value = 2;
 * @return {?proto.api_spec.Bool}
 */
proto.api_spec.Primitive.prototype.getBoolValue = function() {
  return /** @type{?proto.api_spec.Bool} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Bool, 2));
};


/**
 * @param {?proto.api_spec.Bool|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearBoolValue = function() {
  return this.setBoolValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Bytes bytes_value = 3;
 * @return {?proto.api_spec.Bytes}
 */
proto.api_spec.Primitive.prototype.getBytesValue = function() {
  return /** @type{?proto.api_spec.Bytes} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Bytes, 3));
};


/**
 * @param {?proto.api_spec.Bytes|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearBytesValue = function() {
  return this.setBytesValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional String string_value = 4;
 * @return {?proto.api_spec.String}
 */
proto.api_spec.Primitive.prototype.getStringValue = function() {
  return /** @type{?proto.api_spec.String} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.String, 4));
};


/**
 * @param {?proto.api_spec.String|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearStringValue = function() {
  return this.setStringValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Int32 int32_value = 5;
 * @return {?proto.api_spec.Int32}
 */
proto.api_spec.Primitive.prototype.getInt32Value = function() {
  return /** @type{?proto.api_spec.Int32} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Int32, 5));
};


/**
 * @param {?proto.api_spec.Int32|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setInt32Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearInt32Value = function() {
  return this.setInt32Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasInt32Value = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Int64 int64_value = 6;
 * @return {?proto.api_spec.Int64}
 */
proto.api_spec.Primitive.prototype.getInt64Value = function() {
  return /** @type{?proto.api_spec.Int64} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Int64, 6));
};


/**
 * @param {?proto.api_spec.Int64|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setInt64Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearInt64Value = function() {
  return this.setInt64Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasInt64Value = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Uint32 uint32_value = 7;
 * @return {?proto.api_spec.Uint32}
 */
proto.api_spec.Primitive.prototype.getUint32Value = function() {
  return /** @type{?proto.api_spec.Uint32} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Uint32, 7));
};


/**
 * @param {?proto.api_spec.Uint32|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setUint32Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearUint32Value = function() {
  return this.setUint32Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasUint32Value = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Uint64 uint64_value = 8;
 * @return {?proto.api_spec.Uint64}
 */
proto.api_spec.Primitive.prototype.getUint64Value = function() {
  return /** @type{?proto.api_spec.Uint64} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Uint64, 8));
};


/**
 * @param {?proto.api_spec.Uint64|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setUint64Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearUint64Value = function() {
  return this.setUint64Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasUint64Value = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Double double_value = 9;
 * @return {?proto.api_spec.Double}
 */
proto.api_spec.Primitive.prototype.getDoubleValue = function() {
  return /** @type{?proto.api_spec.Double} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Double, 9));
};


/**
 * @param {?proto.api_spec.Double|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearDoubleValue = function() {
  return this.setDoubleValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Float float_value = 10;
 * @return {?proto.api_spec.Float}
 */
proto.api_spec.Primitive.prototype.getFloatValue = function() {
  return /** @type{?proto.api_spec.Float} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Float, 10));
};


/**
 * @param {?proto.api_spec.Float|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.api_spec.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearFloatValue = function() {
  return this.setFloatValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional AkitaAnnotations akita_annotations = 11;
 * @return {?proto.api_spec.AkitaAnnotations}
 */
proto.api_spec.Primitive.prototype.getAkitaAnnotations = function() {
  return /** @type{?proto.api_spec.AkitaAnnotations} */ (
    jspb.Message.getWrapperField(this, types_pb.AkitaAnnotations, 11));
};


/**
 * @param {?proto.api_spec.AkitaAnnotations|undefined} value
 * @return {!proto.api_spec.Primitive} returns this
*/
proto.api_spec.Primitive.prototype.setAkitaAnnotations = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearAkitaAnnotations = function() {
  return this.setAkitaAnnotations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.hasAkitaAnnotations = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool contains_random_value = 12;
 * @return {boolean}
 */
proto.api_spec.Primitive.prototype.getContainsRandomValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.setContainsRandomValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * map<string, bool> formats = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.api_spec.Primitive.prototype.getFormatsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.clearFormatsMap = function() {
  this.getFormatsMap().clear();
  return this;
};


/**
 * optional string format_kind = 14;
 * @return {string}
 */
proto.api_spec.Primitive.prototype.getFormatKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.Primitive} returns this
 */
proto.api_spec.Primitive.prototype.setFormatKind = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_spec.List.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.List.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    elemsList: jspb.Message.toObjectList(msg.getElemsList(),
    proto.api_spec.Data.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.List}
 */
proto.api_spec.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.List;
  return proto.api_spec.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.List}
 */
proto.api_spec.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.addElems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Data elems = 1;
 * @return {!Array<!proto.api_spec.Data>}
 */
proto.api_spec.List.prototype.getElemsList = function() {
  return /** @type{!Array<!proto.api_spec.Data>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_spec.Data, 1));
};


/**
 * @param {!Array<!proto.api_spec.Data>} value
 * @return {!proto.api_spec.List} returns this
*/
proto.api_spec.List.prototype.setElemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_spec.Data=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_spec.Data}
 */
proto.api_spec.List.prototype.addElems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_spec.Data, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api_spec.List} returns this
 */
proto.api_spec.List.prototype.clearElemsList = function() {
  return this.setElemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Struct.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Struct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Struct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Struct.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.api_spec.Data.toObject) : [],
    mapType: (f = msg.getMapType()) && proto.api_spec.MapData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Struct}
 */
proto.api_spec.Struct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Struct;
  return proto.api_spec.Struct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Struct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Struct}
 */
proto.api_spec.Struct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.Data.deserializeBinaryFromReader, "", new proto.api_spec.Data());
         });
      break;
    case 2:
      var value = new proto.api_spec.MapData;
      reader.readMessage(value,proto.api_spec.MapData.deserializeBinaryFromReader);
      msg.setMapType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Struct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Struct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Struct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Struct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.Data.serializeBinaryToWriter);
  }
  f = message.getMapType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.MapData.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, Data> fields = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.Data>}
 */
proto.api_spec.Struct.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.Data>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api_spec.Data));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.Struct} returns this
 */
proto.api_spec.Struct.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;
};


/**
 * optional MapData map_type = 2;
 * @return {?proto.api_spec.MapData}
 */
proto.api_spec.Struct.prototype.getMapType = function() {
  return /** @type{?proto.api_spec.MapData} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.MapData, 2));
};


/**
 * @param {?proto.api_spec.MapData|undefined} value
 * @return {!proto.api_spec.Struct} returns this
*/
proto.api_spec.Struct.prototype.setMapType = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Struct} returns this
 */
proto.api_spec.Struct.prototype.clearMapType = function() {
  return this.setMapType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Struct.prototype.hasMapType = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.MapData.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.MapData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.MapData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MapData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.api_spec.Data.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.api_spec.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.MapData}
 */
proto.api_spec.MapData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.MapData;
  return proto.api_spec.MapData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.MapData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.MapData}
 */
proto.api_spec.MapData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.MapData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.MapData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.MapData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MapData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional Data key = 1;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.MapData.prototype.getKey = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Data, 1));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.MapData} returns this
*/
proto.api_spec.MapData.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MapData} returns this
 */
proto.api_spec.MapData.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MapData.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data value = 2;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.MapData.prototype.getValue = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Data, 2));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.MapData} returns this
*/
proto.api_spec.MapData.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MapData} returns this
 */
proto.api_spec.MapData.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MapData.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.None.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.None.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.None} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.None.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.None}
 */
proto.api_spec.None.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.None;
  return proto.api_spec.None.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.None} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.None}
 */
proto.api_spec.None.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.None.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.None.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.None} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.None.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.Optional.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.Optional.ValueCase = {
  VALUE_NOT_SET: 0,
  DATA: 1,
  NONE: 2
};

/**
 * @return {proto.api_spec.Optional.ValueCase}
 */
proto.api_spec.Optional.prototype.getValueCase = function() {
  return /** @type {proto.api_spec.Optional.ValueCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.Optional.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Optional.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Optional.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Optional} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Optional.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.api_spec.Data.toObject(includeInstance, f),
    none: (f = msg.getNone()) && proto.api_spec.None.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Optional}
 */
proto.api_spec.Optional.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Optional;
  return proto.api_spec.Optional.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Optional} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Optional}
 */
proto.api_spec.Optional.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.api_spec.None;
      reader.readMessage(value,proto.api_spec.None.deserializeBinaryFromReader);
      msg.setNone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Optional.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Optional.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Optional} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Optional.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
  f = message.getNone();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.None.serializeBinaryToWriter
    );
  }
};


/**
 * optional Data data = 1;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.Optional.prototype.getData = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Data, 1));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.Optional} returns this
*/
proto.api_spec.Optional.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.Optional.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Optional} returns this
 */
proto.api_spec.Optional.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Optional.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional None none = 2;
 * @return {?proto.api_spec.None}
 */
proto.api_spec.Optional.prototype.getNone = function() {
  return /** @type{?proto.api_spec.None} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.None, 2));
};


/**
 * @param {?proto.api_spec.None|undefined} value
 * @return {!proto.api_spec.Optional} returns this
*/
proto.api_spec.Optional.prototype.setNone = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.Optional.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Optional} returns this
 */
proto.api_spec.Optional.prototype.clearNone = function() {
  return this.setNone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Optional.prototype.hasNone = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.OneOf.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.OneOf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.OneOf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OneOf.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, proto.api_spec.Data.toObject) : [],
    potentialConflict: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.OneOf}
 */
proto.api_spec.OneOf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.OneOf;
  return proto.api_spec.OneOf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.OneOf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.OneOf}
 */
proto.api_spec.OneOf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.Data.deserializeBinaryFromReader, "", new proto.api_spec.Data());
         });
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPotentialConflict(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.OneOf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.OneOf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.OneOf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OneOf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.Data.serializeBinaryToWriter);
  }
  f = message.getPotentialConflict();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * map<string, Data> options = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.Data>}
 */
proto.api_spec.OneOf.prototype.getOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.Data>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api_spec.Data));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.OneOf} returns this
 */
proto.api_spec.OneOf.prototype.clearOptionsMap = function() {
  this.getOptionsMap().clear();
  return this;
};


/**
 * optional bool potential_conflict = 2;
 * @return {boolean}
 */
proto.api_spec.OneOf.prototype.getPotentialConflict = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api_spec.OneOf} returns this
 */
proto.api_spec.OneOf.prototype.setPotentialConflict = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.GRPCMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.GRPCMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.GRPCMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.GRPCMeta.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.GRPCMeta}
 */
proto.api_spec.GRPCMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.GRPCMeta;
  return proto.api_spec.GRPCMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.GRPCMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.GRPCMeta}
 */
proto.api_spec.GRPCMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.GRPCMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.GRPCMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.GRPCMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.GRPCMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPPath.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPPath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPPath.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPPath}
 */
proto.api_spec.HTTPPath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPPath;
  return proto.api_spec.HTTPPath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPPath}
 */
proto.api_spec.HTTPPath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPPath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPPath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPPath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api_spec.HTTPPath.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPPath} returns this
 */
proto.api_spec.HTTPPath.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPQuery}
 */
proto.api_spec.HTTPQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPQuery;
  return proto.api_spec.HTTPQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPQuery}
 */
proto.api_spec.HTTPQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api_spec.HTTPQuery.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPQuery} returns this
 */
proto.api_spec.HTTPQuery.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPHeader}
 */
proto.api_spec.HTTPHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPHeader;
  return proto.api_spec.HTTPHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPHeader}
 */
proto.api_spec.HTTPHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api_spec.HTTPHeader.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPHeader} returns this
 */
proto.api_spec.HTTPHeader.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPAuth.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPAuth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPAuth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPAuth.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPAuth}
 */
proto.api_spec.HTTPAuth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPAuth;
  return proto.api_spec.HTTPAuth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPAuth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPAuth}
 */
proto.api_spec.HTTPAuth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api_spec.HTTPAuth.HTTPAuthType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPAuth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPAuth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPAuth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPAuth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.api_spec.HTTPAuth.HTTPAuthType = {
  UNKNOWN: 0,
  BASIC: 1,
  BEARER: 2
};

/**
 * optional HTTPAuthType type = 1;
 * @return {!proto.api_spec.HTTPAuth.HTTPAuthType}
 */
proto.api_spec.HTTPAuth.prototype.getType = function() {
  return /** @type {!proto.api_spec.HTTPAuth.HTTPAuthType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api_spec.HTTPAuth.HTTPAuthType} value
 * @return {!proto.api_spec.HTTPAuth} returns this
 */
proto.api_spec.HTTPAuth.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPCookie.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPCookie.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPCookie} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPCookie.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPCookie}
 */
proto.api_spec.HTTPCookie.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPCookie;
  return proto.api_spec.HTTPCookie.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPCookie} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPCookie}
 */
proto.api_spec.HTTPCookie.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPCookie.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPCookie.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPCookie} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPCookie.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api_spec.HTTPCookie.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPCookie} returns this
 */
proto.api_spec.HTTPCookie.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPBody.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    otherType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPBody}
 */
proto.api_spec.HTTPBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPBody;
  return proto.api_spec.HTTPBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPBody}
 */
proto.api_spec.HTTPBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api_spec.HTTPBody.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtherType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getOtherType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.api_spec.HTTPBody.ContentType = {
  UNKNOWN: 0,
  JSON: 1,
  FORM_URL_ENCODED: 2,
  OCTET_STREAM: 3,
  PDF: 4,
  TEXT_PLAIN: 5,
  YAML: 6,
  TEXT_HTML: 7,
  OTHER: 8
};

/**
 * optional ContentType content_type = 1;
 * @return {!proto.api_spec.HTTPBody.ContentType}
 */
proto.api_spec.HTTPBody.prototype.getContentType = function() {
  return /** @type {!proto.api_spec.HTTPBody.ContentType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api_spec.HTTPBody.ContentType} value
 * @return {!proto.api_spec.HTTPBody} returns this
 */
proto.api_spec.HTTPBody.prototype.setContentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string other_type = 2;
 * @return {string}
 */
proto.api_spec.HTTPBody.prototype.getOtherType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPBody} returns this
 */
proto.api_spec.HTTPBody.prototype.setOtherType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPMultipart.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPMultipart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPMultipart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPMultipart.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPMultipart}
 */
proto.api_spec.HTTPMultipart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPMultipart;
  return proto.api_spec.HTTPMultipart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPMultipart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPMultipart}
 */
proto.api_spec.HTTPMultipart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPMultipart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPMultipart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPMultipart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPMultipart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.api_spec.HTTPMultipart.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPMultipart} returns this
 */
proto.api_spec.HTTPMultipart.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPEmpty.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPEmpty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPEmpty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPEmpty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPEmpty}
 */
proto.api_spec.HTTPEmpty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPEmpty;
  return proto.api_spec.HTTPEmpty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPEmpty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPEmpty}
 */
proto.api_spec.HTTPEmpty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPEmpty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPEmpty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPEmpty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPEmpty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.HTTPMeta.oneofGroups_ = [[1,2,3,4,5,6,8,9]];

/**
 * @enum {number}
 */
proto.api_spec.HTTPMeta.LocationCase = {
  LOCATION_NOT_SET: 0,
  PATH: 1,
  QUERY: 2,
  HEADER: 3,
  COOKIE: 4,
  BODY: 5,
  EMPTY: 6,
  AUTH: 8,
  MULTIPART: 9
};

/**
 * @return {proto.api_spec.HTTPMeta.LocationCase}
 */
proto.api_spec.HTTPMeta.prototype.getLocationCase = function() {
  return /** @type {proto.api_spec.HTTPMeta.LocationCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.HTTPMeta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api_spec.HTTPPath.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && proto.api_spec.HTTPQuery.toObject(includeInstance, f),
    header: (f = msg.getHeader()) && proto.api_spec.HTTPHeader.toObject(includeInstance, f),
    cookie: (f = msg.getCookie()) && proto.api_spec.HTTPCookie.toObject(includeInstance, f),
    body: (f = msg.getBody()) && proto.api_spec.HTTPBody.toObject(includeInstance, f),
    empty: (f = msg.getEmpty()) && proto.api_spec.HTTPEmpty.toObject(includeInstance, f),
    auth: (f = msg.getAuth()) && proto.api_spec.HTTPAuth.toObject(includeInstance, f),
    multipart: (f = msg.getMultipart()) && proto.api_spec.HTTPMultipart.toObject(includeInstance, f),
    responseCode: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPMeta}
 */
proto.api_spec.HTTPMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPMeta;
  return proto.api_spec.HTTPMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPMeta}
 */
proto.api_spec.HTTPMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.HTTPPath;
      reader.readMessage(value,proto.api_spec.HTTPPath.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = new proto.api_spec.HTTPQuery;
      reader.readMessage(value,proto.api_spec.HTTPQuery.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 3:
      var value = new proto.api_spec.HTTPHeader;
      reader.readMessage(value,proto.api_spec.HTTPHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 4:
      var value = new proto.api_spec.HTTPCookie;
      reader.readMessage(value,proto.api_spec.HTTPCookie.deserializeBinaryFromReader);
      msg.setCookie(value);
      break;
    case 5:
      var value = new proto.api_spec.HTTPBody;
      reader.readMessage(value,proto.api_spec.HTTPBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 6:
      var value = new proto.api_spec.HTTPEmpty;
      reader.readMessage(value,proto.api_spec.HTTPEmpty.deserializeBinaryFromReader);
      msg.setEmpty(value);
      break;
    case 8:
      var value = new proto.api_spec.HTTPAuth;
      reader.readMessage(value,proto.api_spec.HTTPAuth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 9:
      var value = new proto.api_spec.HTTPMultipart;
      reader.readMessage(value,proto.api_spec.HTTPMultipart.deserializeBinaryFromReader);
      msg.setMultipart(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.HTTPPath.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.HTTPQuery.serializeBinaryToWriter
    );
  }
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.HTTPHeader.serializeBinaryToWriter
    );
  }
  f = message.getCookie();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.HTTPCookie.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_spec.HTTPBody.serializeBinaryToWriter
    );
  }
  f = message.getEmpty();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api_spec.HTTPEmpty.serializeBinaryToWriter
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.api_spec.HTTPAuth.serializeBinaryToWriter
    );
  }
  f = message.getMultipart();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.api_spec.HTTPMultipart.serializeBinaryToWriter
    );
  }
  f = message.getResponseCode();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional HTTPPath path = 1;
 * @return {?proto.api_spec.HTTPPath}
 */
proto.api_spec.HTTPMeta.prototype.getPath = function() {
  return /** @type{?proto.api_spec.HTTPPath} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPPath, 1));
};


/**
 * @param {?proto.api_spec.HTTPPath|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setPath = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearPath = function() {
  return this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HTTPQuery query = 2;
 * @return {?proto.api_spec.HTTPQuery}
 */
proto.api_spec.HTTPMeta.prototype.getQuery = function() {
  return /** @type{?proto.api_spec.HTTPQuery} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPQuery, 2));
};


/**
 * @param {?proto.api_spec.HTTPQuery|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional HTTPHeader header = 3;
 * @return {?proto.api_spec.HTTPHeader}
 */
proto.api_spec.HTTPMeta.prototype.getHeader = function() {
  return /** @type{?proto.api_spec.HTTPHeader} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPHeader, 3));
};


/**
 * @param {?proto.api_spec.HTTPHeader|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setHeader = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HTTPCookie cookie = 4;
 * @return {?proto.api_spec.HTTPCookie}
 */
proto.api_spec.HTTPMeta.prototype.getCookie = function() {
  return /** @type{?proto.api_spec.HTTPCookie} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPCookie, 4));
};


/**
 * @param {?proto.api_spec.HTTPCookie|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setCookie = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearCookie = function() {
  return this.setCookie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasCookie = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional HTTPBody body = 5;
 * @return {?proto.api_spec.HTTPBody}
 */
proto.api_spec.HTTPMeta.prototype.getBody = function() {
  return /** @type{?proto.api_spec.HTTPBody} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPBody, 5));
};


/**
 * @param {?proto.api_spec.HTTPBody|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasBody = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional HTTPEmpty empty = 6;
 * @return {?proto.api_spec.HTTPEmpty}
 */
proto.api_spec.HTTPMeta.prototype.getEmpty = function() {
  return /** @type{?proto.api_spec.HTTPEmpty} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPEmpty, 6));
};


/**
 * @param {?proto.api_spec.HTTPEmpty|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setEmpty = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearEmpty = function() {
  return this.setEmpty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasEmpty = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional HTTPAuth auth = 8;
 * @return {?proto.api_spec.HTTPAuth}
 */
proto.api_spec.HTTPMeta.prototype.getAuth = function() {
  return /** @type{?proto.api_spec.HTTPAuth} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPAuth, 8));
};


/**
 * @param {?proto.api_spec.HTTPAuth|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setAuth = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional HTTPMultipart multipart = 9;
 * @return {?proto.api_spec.HTTPMultipart}
 */
proto.api_spec.HTTPMeta.prototype.getMultipart = function() {
  return /** @type{?proto.api_spec.HTTPMultipart} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPMultipart, 9));
};


/**
 * @param {?proto.api_spec.HTTPMultipart|undefined} value
 * @return {!proto.api_spec.HTTPMeta} returns this
*/
proto.api_spec.HTTPMeta.prototype.setMultipart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.api_spec.HTTPMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.clearMultipart = function() {
  return this.setMultipart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.HTTPMeta.prototype.hasMultipart = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 response_code = 7;
 * @return {number}
 */
proto.api_spec.HTTPMeta.prototype.getResponseCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.HTTPMeta} returns this
 */
proto.api_spec.HTTPMeta.prototype.setResponseCode = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.DataMeta.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.DataMeta.MetaCase = {
  META_NOT_SET: 0,
  GRPC: 1,
  HTTP: 2
};

/**
 * @return {proto.api_spec.DataMeta.MetaCase}
 */
proto.api_spec.DataMeta.prototype.getMetaCase = function() {
  return /** @type {proto.api_spec.DataMeta.MetaCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.DataMeta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.DataMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.DataMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.DataMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    grpc: (f = msg.getGrpc()) && proto.api_spec.GRPCMeta.toObject(includeInstance, f),
    http: (f = msg.getHttp()) && proto.api_spec.HTTPMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.DataMeta}
 */
proto.api_spec.DataMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.DataMeta;
  return proto.api_spec.DataMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.DataMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.DataMeta}
 */
proto.api_spec.DataMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.GRPCMeta;
      reader.readMessage(value,proto.api_spec.GRPCMeta.deserializeBinaryFromReader);
      msg.setGrpc(value);
      break;
    case 2:
      var value = new proto.api_spec.HTTPMeta;
      reader.readMessage(value,proto.api_spec.HTTPMeta.deserializeBinaryFromReader);
      msg.setHttp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.DataMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.DataMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.DataMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrpc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.GRPCMeta.serializeBinaryToWriter
    );
  }
  f = message.getHttp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.HTTPMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional GRPCMeta grpc = 1;
 * @return {?proto.api_spec.GRPCMeta}
 */
proto.api_spec.DataMeta.prototype.getGrpc = function() {
  return /** @type{?proto.api_spec.GRPCMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.GRPCMeta, 1));
};


/**
 * @param {?proto.api_spec.GRPCMeta|undefined} value
 * @return {!proto.api_spec.DataMeta} returns this
*/
proto.api_spec.DataMeta.prototype.setGrpc = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.DataMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataMeta} returns this
 */
proto.api_spec.DataMeta.prototype.clearGrpc = function() {
  return this.setGrpc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataMeta.prototype.hasGrpc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HTTPMeta http = 2;
 * @return {?proto.api_spec.HTTPMeta}
 */
proto.api_spec.DataMeta.prototype.getHttp = function() {
  return /** @type{?proto.api_spec.HTTPMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPMeta, 2));
};


/**
 * @param {?proto.api_spec.HTTPMeta|undefined} value
 * @return {!proto.api_spec.DataMeta} returns this
*/
proto.api_spec.DataMeta.prototype.setHttp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.DataMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataMeta} returns this
 */
proto.api_spec.DataMeta.prototype.clearHttp = function() {
  return this.setHttp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataMeta.prototype.hasHttp = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.ExampleValue.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.ExampleValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.ExampleValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ExampleValue.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.ExampleValue}
 */
proto.api_spec.ExampleValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.ExampleValue;
  return proto.api_spec.ExampleValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.ExampleValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.ExampleValue}
 */
proto.api_spec.ExampleValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.ExampleValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.ExampleValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.ExampleValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ExampleValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.Data.oneofGroups_ = [[1,2,3,4,6]];

/**
 * @enum {number}
 */
proto.api_spec.Data.ValueCase = {
  VALUE_NOT_SET: 0,
  PRIMITIVE: 1,
  STRUCT: 2,
  LIST: 3,
  OPTIONAL: 4,
  ONEOF: 6
};

/**
 * @return {proto.api_spec.Data.ValueCase}
 */
proto.api_spec.Data.prototype.getValueCase = function() {
  return /** @type {proto.api_spec.Data.ValueCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.Data.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    primitive: (f = msg.getPrimitive()) && proto.api_spec.Primitive.toObject(includeInstance, f),
    struct: (f = msg.getStruct()) && proto.api_spec.Struct.toObject(includeInstance, f),
    list: (f = msg.getList()) && proto.api_spec.List.toObject(includeInstance, f),
    optional: (f = msg.getOptional()) && proto.api_spec.Optional.toObject(includeInstance, f),
    oneof: (f = msg.getOneof()) && proto.api_spec.OneOf.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto.api_spec.DataMeta.toObject(includeInstance, f),
    nullable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    exampleValuesMap: (f = msg.getExampleValuesMap()) ? f.toObject(includeInstance, proto.api_spec.ExampleValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Data}
 */
proto.api_spec.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Data;
  return proto.api_spec.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Data}
 */
proto.api_spec.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Primitive;
      reader.readMessage(value,proto.api_spec.Primitive.deserializeBinaryFromReader);
      msg.setPrimitive(value);
      break;
    case 2:
      var value = new proto.api_spec.Struct;
      reader.readMessage(value,proto.api_spec.Struct.deserializeBinaryFromReader);
      msg.setStruct(value);
      break;
    case 3:
      var value = new proto.api_spec.List;
      reader.readMessage(value,proto.api_spec.List.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    case 4:
      var value = new proto.api_spec.Optional;
      reader.readMessage(value,proto.api_spec.Optional.deserializeBinaryFromReader);
      msg.setOptional(value);
      break;
    case 6:
      var value = new proto.api_spec.OneOf;
      reader.readMessage(value,proto.api_spec.OneOf.deserializeBinaryFromReader);
      msg.setOneof(value);
      break;
    case 5:
      var value = new proto.api_spec.DataMeta;
      reader.readMessage(value,proto.api_spec.DataMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNullable(value);
      break;
    case 8:
      var value = msg.getExampleValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.ExampleValue.deserializeBinaryFromReader, "", new proto.api_spec.ExampleValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimitive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.Primitive.serializeBinaryToWriter
    );
  }
  f = message.getStruct();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.Struct.serializeBinaryToWriter
    );
  }
  f = message.getList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.List.serializeBinaryToWriter
    );
  }
  f = message.getOptional();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.Optional.serializeBinaryToWriter
    );
  }
  f = message.getOneof();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api_spec.OneOf.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_spec.DataMeta.serializeBinaryToWriter
    );
  }
  f = message.getNullable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getExampleValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.ExampleValue.serializeBinaryToWriter);
  }
};


/**
 * optional Primitive primitive = 1;
 * @return {?proto.api_spec.Primitive}
 */
proto.api_spec.Data.prototype.getPrimitive = function() {
  return /** @type{?proto.api_spec.Primitive} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Primitive, 1));
};


/**
 * @param {?proto.api_spec.Primitive|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setPrimitive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearPrimitive = function() {
  return this.setPrimitive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasPrimitive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Struct struct = 2;
 * @return {?proto.api_spec.Struct}
 */
proto.api_spec.Data.prototype.getStruct = function() {
  return /** @type{?proto.api_spec.Struct} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Struct, 2));
};


/**
 * @param {?proto.api_spec.Struct|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearStruct = function() {
  return this.setStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasStruct = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional List list = 3;
 * @return {?proto.api_spec.List}
 */
proto.api_spec.Data.prototype.getList = function() {
  return /** @type{?proto.api_spec.List} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.List, 3));
};


/**
 * @param {?proto.api_spec.List|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearList = function() {
  return this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasList = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Optional optional = 4;
 * @return {?proto.api_spec.Optional}
 */
proto.api_spec.Data.prototype.getOptional = function() {
  return /** @type{?proto.api_spec.Optional} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Optional, 4));
};


/**
 * @param {?proto.api_spec.Optional|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setOptional = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearOptional = function() {
  return this.setOptional(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasOptional = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OneOf oneof = 6;
 * @return {?proto.api_spec.OneOf}
 */
proto.api_spec.Data.prototype.getOneof = function() {
  return /** @type{?proto.api_spec.OneOf} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.OneOf, 6));
};


/**
 * @param {?proto.api_spec.OneOf|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setOneof = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearOneof = function() {
  return this.setOneof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasOneof = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DataMeta meta = 5;
 * @return {?proto.api_spec.DataMeta}
 */
proto.api_spec.Data.prototype.getMeta = function() {
  return /** @type{?proto.api_spec.DataMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataMeta, 5));
};


/**
 * @param {?proto.api_spec.DataMeta|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool nullable = 7;
 * @return {boolean}
 */
proto.api_spec.Data.prototype.getNullable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.setNullable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * map<string, ExampleValue> example_values = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.ExampleValue>}
 */
proto.api_spec.Data.prototype.getExampleValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.ExampleValue>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.api_spec.ExampleValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearExampleValuesMap = function() {
  this.getExampleValuesMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.MethodID.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.MethodID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.MethodID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodID.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apiType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.MethodID}
 */
proto.api_spec.MethodID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.MethodID;
  return proto.api_spec.MethodID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.MethodID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.MethodID}
 */
proto.api_spec.MethodID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.api_spec.ApiType} */ (reader.readEnum());
      msg.setApiType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.MethodID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.MethodID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.MethodID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApiType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.api_spec.MethodID.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.MethodID} returns this
 */
proto.api_spec.MethodID.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ApiType api_type = 2;
 * @return {!proto.api_spec.ApiType}
 */
proto.api_spec.MethodID.prototype.getApiType = function() {
  return /** @type {!proto.api_spec.ApiType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api_spec.ApiType} value
 * @return {!proto.api_spec.MethodID} returns this
 */
proto.api_spec.MethodID.prototype.setApiType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.GRPCMethodMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.GRPCMethodMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.GRPCMethodMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.GRPCMethodMeta.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.GRPCMethodMeta}
 */
proto.api_spec.GRPCMethodMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.GRPCMethodMeta;
  return proto.api_spec.GRPCMethodMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.GRPCMethodMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.GRPCMethodMeta}
 */
proto.api_spec.GRPCMethodMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.GRPCMethodMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.GRPCMethodMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.GRPCMethodMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.GRPCMethodMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.HTTPMethodMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.HTTPMethodMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.HTTPMethodMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPMethodMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathTemplate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    processingLatency: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    pathParamAlg: jspb.Message.getFieldWithDefault(msg, 5, 0),
    obfuscation: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.HTTPMethodMeta}
 */
proto.api_spec.HTTPMethodMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.HTTPMethodMeta;
  return proto.api_spec.HTTPMethodMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.HTTPMethodMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.HTTPMethodMeta}
 */
proto.api_spec.HTTPMethodMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathTemplate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setProcessingLatency(value);
      break;
    case 5:
      var value = /** @type {!proto.api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm} */ (reader.readEnum());
      msg.setPathParamAlg(value);
      break;
    case 6:
      var value = /** @type {!proto.api_spec.HTTPMethodMeta.Obfuscation} */ (reader.readEnum());
      msg.setObfuscation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.HTTPMethodMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.HTTPMethodMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.HTTPMethodMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.HTTPMethodMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPathTemplate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProcessingLatency();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getPathParamAlg();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getObfuscation();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm = {
  UNKNOWN: 0,
  V1: 1,
  V2: 2,
  V3: 3
};

/**
 * @enum {number}
 */
proto.api_spec.HTTPMethodMeta.Obfuscation = {
  ZERO_VALUE: 0,
  NONE: 1
};

/**
 * optional string method = 1;
 * @return {string}
 */
proto.api_spec.HTTPMethodMeta.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPMethodMeta} returns this
 */
proto.api_spec.HTTPMethodMeta.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path_template = 2;
 * @return {string}
 */
proto.api_spec.HTTPMethodMeta.prototype.getPathTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPMethodMeta} returns this
 */
proto.api_spec.HTTPMethodMeta.prototype.setPathTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.api_spec.HTTPMethodMeta.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.HTTPMethodMeta} returns this
 */
proto.api_spec.HTTPMethodMeta.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float processing_latency = 4;
 * @return {number}
 */
proto.api_spec.HTTPMethodMeta.prototype.getProcessingLatency = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.HTTPMethodMeta} returns this
 */
proto.api_spec.HTTPMethodMeta.prototype.setProcessingLatency = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional PathParameterInferenceAlgorithm path_param_alg = 5;
 * @return {!proto.api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm}
 */
proto.api_spec.HTTPMethodMeta.prototype.getPathParamAlg = function() {
  return /** @type {!proto.api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm} value
 * @return {!proto.api_spec.HTTPMethodMeta} returns this
 */
proto.api_spec.HTTPMethodMeta.prototype.setPathParamAlg = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Obfuscation obfuscation = 6;
 * @return {!proto.api_spec.HTTPMethodMeta.Obfuscation}
 */
proto.api_spec.HTTPMethodMeta.prototype.getObfuscation = function() {
  return /** @type {!proto.api_spec.HTTPMethodMeta.Obfuscation} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.api_spec.HTTPMethodMeta.Obfuscation} value
 * @return {!proto.api_spec.HTTPMethodMeta} returns this
 */
proto.api_spec.HTTPMethodMeta.prototype.setObfuscation = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.MethodMeta.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.MethodMeta.MetaCase = {
  META_NOT_SET: 0,
  GRPC: 1,
  HTTP: 2
};

/**
 * @return {proto.api_spec.MethodMeta.MetaCase}
 */
proto.api_spec.MethodMeta.prototype.getMetaCase = function() {
  return /** @type {proto.api_spec.MethodMeta.MetaCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.MethodMeta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.MethodMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.MethodMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.MethodMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    grpc: (f = msg.getGrpc()) && proto.api_spec.GRPCMethodMeta.toObject(includeInstance, f),
    http: (f = msg.getHttp()) && proto.api_spec.HTTPMethodMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.MethodMeta}
 */
proto.api_spec.MethodMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.MethodMeta;
  return proto.api_spec.MethodMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.MethodMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.MethodMeta}
 */
proto.api_spec.MethodMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.GRPCMethodMeta;
      reader.readMessage(value,proto.api_spec.GRPCMethodMeta.deserializeBinaryFromReader);
      msg.setGrpc(value);
      break;
    case 2:
      var value = new proto.api_spec.HTTPMethodMeta;
      reader.readMessage(value,proto.api_spec.HTTPMethodMeta.deserializeBinaryFromReader);
      msg.setHttp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.MethodMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.MethodMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.MethodMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MethodMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrpc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.GRPCMethodMeta.serializeBinaryToWriter
    );
  }
  f = message.getHttp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.HTTPMethodMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional GRPCMethodMeta grpc = 1;
 * @return {?proto.api_spec.GRPCMethodMeta}
 */
proto.api_spec.MethodMeta.prototype.getGrpc = function() {
  return /** @type{?proto.api_spec.GRPCMethodMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.GRPCMethodMeta, 1));
};


/**
 * @param {?proto.api_spec.GRPCMethodMeta|undefined} value
 * @return {!proto.api_spec.MethodMeta} returns this
*/
proto.api_spec.MethodMeta.prototype.setGrpc = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.MethodMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MethodMeta} returns this
 */
proto.api_spec.MethodMeta.prototype.clearGrpc = function() {
  return this.setGrpc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MethodMeta.prototype.hasGrpc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HTTPMethodMeta http = 2;
 * @return {?proto.api_spec.HTTPMethodMeta}
 */
proto.api_spec.MethodMeta.prototype.getHttp = function() {
  return /** @type{?proto.api_spec.HTTPMethodMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.HTTPMethodMeta, 2));
};


/**
 * @param {?proto.api_spec.HTTPMethodMeta|undefined} value
 * @return {!proto.api_spec.MethodMeta} returns this
*/
proto.api_spec.MethodMeta.prototype.setHttp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.MethodMeta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MethodMeta} returns this
 */
proto.api_spec.MethodMeta.prototype.clearHttp = function() {
  return this.setHttp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MethodMeta.prototype.hasHttp = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Method.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Method.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Method} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Method.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.api_spec.MethodID.toObject(includeInstance, f),
    argsMap: (f = msg.getArgsMap()) ? f.toObject(includeInstance, proto.api_spec.Data.toObject) : [],
    responsesMap: (f = msg.getResponsesMap()) ? f.toObject(includeInstance, proto.api_spec.Data.toObject) : [],
    meta: (f = msg.getMeta()) && proto.api_spec.MethodMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Method}
 */
proto.api_spec.Method.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Method;
  return proto.api_spec.Method.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Method} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Method}
 */
proto.api_spec.Method.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.MethodID;
      reader.readMessage(value,proto.api_spec.MethodID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = msg.getArgsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.Data.deserializeBinaryFromReader, "", new proto.api_spec.Data());
         });
      break;
    case 3:
      var value = msg.getResponsesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.Data.deserializeBinaryFromReader, "", new proto.api_spec.Data());
         });
      break;
    case 4:
      var value = new proto.api_spec.MethodMeta;
      reader.readMessage(value,proto.api_spec.MethodMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Method.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Method.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Method} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Method.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.MethodID.serializeBinaryToWriter
    );
  }
  f = message.getArgsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.Data.serializeBinaryToWriter);
  }
  f = message.getResponsesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.Data.serializeBinaryToWriter);
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.MethodMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional MethodID id = 1;
 * @return {?proto.api_spec.MethodID}
 */
proto.api_spec.Method.prototype.getId = function() {
  return /** @type{?proto.api_spec.MethodID} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.MethodID, 1));
};


/**
 * @param {?proto.api_spec.MethodID|undefined} value
 * @return {!proto.api_spec.Method} returns this
*/
proto.api_spec.Method.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Method} returns this
 */
proto.api_spec.Method.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Method.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, Data> args = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.Data>}
 */
proto.api_spec.Method.prototype.getArgsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.Data>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.api_spec.Data));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.Method} returns this
 */
proto.api_spec.Method.prototype.clearArgsMap = function() {
  this.getArgsMap().clear();
  return this;
};


/**
 * map<string, Data> responses = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.Data>}
 */
proto.api_spec.Method.prototype.getResponsesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.Data>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.api_spec.Data));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.Method} returns this
 */
proto.api_spec.Method.prototype.clearResponsesMap = function() {
  this.getResponsesMap().clear();
  return this;
};


/**
 * optional MethodMeta meta = 4;
 * @return {?proto.api_spec.MethodMeta}
 */
proto.api_spec.Method.prototype.getMeta = function() {
  return /** @type{?proto.api_spec.MethodMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.MethodMeta, 4));
};


/**
 * @param {?proto.api_spec.MethodMeta|undefined} value
 * @return {!proto.api_spec.Method} returns this
*/
proto.api_spec.Method.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Method} returns this
 */
proto.api_spec.Method.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Method.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.api_spec);
