// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.15.8
// source: method.proto

package api_spec

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HTTPAuth_HTTPAuthType int32

const (
	HTTPAuth_UNKNOWN HTTPAuth_HTTPAuthType = 0
	HTTPAuth_BASIC   HTTPAuth_HTTPAuthType = 1
	HTTPAuth_BEARER  HTTPAuth_HTTPAuthType = 2
)

// Enum value maps for HTTPAuth_HTTPAuthType.
var (
	HTTPAuth_HTTPAuthType_name = map[int32]string{
		0: "UNKNOWN",
		1: "BASIC",
		2: "BEARER",
	}
	HTTPAuth_HTTPAuthType_value = map[string]int32{
		"UNKNOWN": 0,
		"BASIC":   1,
		"BEARER":  2,
	}
)

func (x HTTPAuth_HTTPAuthType) Enum() *HTTPAuth_HTTPAuthType {
	p := new(HTTPAuth_HTTPAuthType)
	*p = x
	return p
}

func (x HTTPAuth_HTTPAuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPAuth_HTTPAuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_method_proto_enumTypes[0].Descriptor()
}

func (HTTPAuth_HTTPAuthType) Type() protoreflect.EnumType {
	return &file_method_proto_enumTypes[0]
}

func (x HTTPAuth_HTTPAuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPAuth_HTTPAuthType.Descriptor instead.
func (HTTPAuth_HTTPAuthType) EnumDescriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{20, 0}
}

type HTTPBody_ContentType int32

const (
	HTTPBody_UNKNOWN          HTTPBody_ContentType = 0
	HTTPBody_JSON             HTTPBody_ContentType = 1
	HTTPBody_FORM_URL_ENCODED HTTPBody_ContentType = 2
	HTTPBody_OCTET_STREAM     HTTPBody_ContentType = 3
	HTTPBody_PDF              HTTPBody_ContentType = 4
	HTTPBody_TEXT_PLAIN       HTTPBody_ContentType = 5
	HTTPBody_YAML             HTTPBody_ContentType = 6
	HTTPBody_TEXT_HTML        HTTPBody_ContentType = 7
	HTTPBody_OTHER            HTTPBody_ContentType = 8
)

// Enum value maps for HTTPBody_ContentType.
var (
	HTTPBody_ContentType_name = map[int32]string{
		0: "UNKNOWN",
		1: "JSON",
		2: "FORM_URL_ENCODED",
		3: "OCTET_STREAM",
		4: "PDF",
		5: "TEXT_PLAIN",
		6: "YAML",
		7: "TEXT_HTML",
		8: "OTHER",
	}
	HTTPBody_ContentType_value = map[string]int32{
		"UNKNOWN":          0,
		"JSON":             1,
		"FORM_URL_ENCODED": 2,
		"OCTET_STREAM":     3,
		"PDF":              4,
		"TEXT_PLAIN":       5,
		"YAML":             6,
		"TEXT_HTML":        7,
		"OTHER":            8,
	}
)

func (x HTTPBody_ContentType) Enum() *HTTPBody_ContentType {
	p := new(HTTPBody_ContentType)
	*p = x
	return p
}

func (x HTTPBody_ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPBody_ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_method_proto_enumTypes[1].Descriptor()
}

func (HTTPBody_ContentType) Type() protoreflect.EnumType {
	return &file_method_proto_enumTypes[1]
}

func (x HTTPBody_ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPBody_ContentType.Descriptor instead.
func (HTTPBody_ContentType) EnumDescriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{22, 0}
}

// Identifies the path parameter inference algorithm used to create this
// method. This is `unknown` for witnesses (which do not have any associated
// inference algorithm) and for methods that were created before the
// introduction of this field.
type HTTPMethodMeta_PathParameterInferenceAlgorithm int32

const (
	HTTPMethodMeta_UNKNOWN HTTPMethodMeta_PathParameterInferenceAlgorithm = 0
	HTTPMethodMeta_v1      HTTPMethodMeta_PathParameterInferenceAlgorithm = 1
	HTTPMethodMeta_v2      HTTPMethodMeta_PathParameterInferenceAlgorithm = 2
	HTTPMethodMeta_v3      HTTPMethodMeta_PathParameterInferenceAlgorithm = 3
)

// Enum value maps for HTTPMethodMeta_PathParameterInferenceAlgorithm.
var (
	HTTPMethodMeta_PathParameterInferenceAlgorithm_name = map[int32]string{
		0: "UNKNOWN",
		1: "v1",
		2: "v2",
		3: "v3",
	}
	HTTPMethodMeta_PathParameterInferenceAlgorithm_value = map[string]int32{
		"UNKNOWN": 0,
		"v1":      1,
		"v2":      2,
		"v3":      3,
	}
)

func (x HTTPMethodMeta_PathParameterInferenceAlgorithm) Enum() *HTTPMethodMeta_PathParameterInferenceAlgorithm {
	p := new(HTTPMethodMeta_PathParameterInferenceAlgorithm)
	*p = x
	return p
}

func (x HTTPMethodMeta_PathParameterInferenceAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPMethodMeta_PathParameterInferenceAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_method_proto_enumTypes[2].Descriptor()
}

func (HTTPMethodMeta_PathParameterInferenceAlgorithm) Type() protoreflect.EnumType {
	return &file_method_proto_enumTypes[2]
}

func (x HTTPMethodMeta_PathParameterInferenceAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPMethodMeta_PathParameterInferenceAlgorithm.Descriptor instead.
func (HTTPMethodMeta_PathParameterInferenceAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{31, 0}
}

type Bool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *BoolType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value bool      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Bool) Reset() {
	*x = Bool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{0}
}

func (x *Bool) GetType() *BoolType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Bool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Bytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *BytesType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value []byte     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Bytes) Reset() {
	*x = Bytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bytes) ProtoMessage() {}

func (x *Bytes) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bytes.ProtoReflect.Descriptor instead.
func (*Bytes) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{1}
}

func (x *Bytes) GetType() *BytesType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Bytes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *StringType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value string      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{2}
}

func (x *String) GetType() *StringType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *String) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Int32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *Int32Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value int32      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Int32) Reset() {
	*x = Int32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32) ProtoMessage() {}

func (x *Int32) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32.ProtoReflect.Descriptor instead.
func (*Int32) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{3}
}

func (x *Int32) GetType() *Int32Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Int32) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Int64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *Int64Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value int64      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Int64) Reset() {
	*x = Int64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64) ProtoMessage() {}

func (x *Int64) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64.ProtoReflect.Descriptor instead.
func (*Int64) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{4}
}

func (x *Int64) GetType() *Int64Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Int64) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Uint32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *Uint32Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value uint32      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Uint32) Reset() {
	*x = Uint32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint32) ProtoMessage() {}

func (x *Uint32) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint32.ProtoReflect.Descriptor instead.
func (*Uint32) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{5}
}

func (x *Uint32) GetType() *Uint32Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Uint32) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Uint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *Uint64Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value uint64      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Uint64) Reset() {
	*x = Uint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint64) ProtoMessage() {}

func (x *Uint64) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint64.ProtoReflect.Descriptor instead.
func (*Uint64) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{6}
}

func (x *Uint64) GetType() *Uint64Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Uint64) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Double struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *DoubleType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value float64     `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Double) Reset() {
	*x = Double{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Double) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Double) ProtoMessage() {}

func (x *Double) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Double.ProtoReflect.Descriptor instead.
func (*Double) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{7}
}

func (x *Double) GetType() *DoubleType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Double) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Float struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *FloatType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value float32    `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Float) Reset() {
	*x = Float{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Float) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Float) ProtoMessage() {}

func (x *Float) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Float.ProtoReflect.Descriptor instead.
func (*Float) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{8}
}

func (x *Float) GetType() *FloatType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Float) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Primitive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeHint string `protobuf:"bytes,1,opt,name=type_hint,json=typeHint,proto3" json:"type_hint,omitempty"`
	// Types that are assignable to Value:
	//	*Primitive_BoolValue
	//	*Primitive_BytesValue
	//	*Primitive_StringValue
	//	*Primitive_Int32Value
	//	*Primitive_Int64Value
	//	*Primitive_Uint32Value
	//	*Primitive_Uint64Value
	//	*Primitive_DoubleValue
	//	*Primitive_FloatValue
	Value            isPrimitive_Value `protobuf_oneof:"value"`
	AkitaAnnotations *AkitaAnnotations `protobuf:"bytes,11,opt,name=akita_annotations,json=akitaAnnotations,proto3" json:"akita_annotations,omitempty"`
	// If true, indicates that the value of this primitive was randomly generated.
	// When making API calls against a target system whose state cannot be reset,
	// the API caller may choose to generate a new random value to avoid the old
	// value from invalidating the API call (e.g. creating an object with the same
	// name). It's unlikely that the target system would behave differently
	// depending on a random value, so we think this is a viable workaround.
	// Note that we chose this approach instead of stop generating random values
	// upfront because if we encounter a target system that supports reset, the
	// fixed random values adds extra assurance to reproducibility.
	ContainsRandomValue bool `protobuf:"varint,12,opt,name=contains_random_value,json=containsRandomValue,proto3" json:"contains_random_value,omitempty"`
	// Values of this Primitive must match one of these data formats, if present.
	// An empty map means no restrictions on format.
	//
	// This is typed as a map to ensure stable hashing.  Values should always be
	// `true`.
	//
	// Data format definitions:
	// https://github.com/akitasoftware/test-service/blob/master/lib/data_formats/data_formats.go
	Formats map[string]bool `protobuf:"bytes,13,rep,name=formats,proto3" json:"formats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Format kinds describe collections of formats, e.g. datetime is the kind
	// of various date formats, e.g. RFC3339 and Unix-style timestamps.
	//
	// Data format kind definitions:
	// https://github.com/akitasoftware/test-service/blob/master/lib/data_formats/data_formats.go
	FormatKind string `protobuf:"bytes,14,opt,name=format_kind,json=formatKind,proto3" json:"format_kind,omitempty"`
}

func (x *Primitive) Reset() {
	*x = Primitive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Primitive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Primitive) ProtoMessage() {}

func (x *Primitive) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Primitive.ProtoReflect.Descriptor instead.
func (*Primitive) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{9}
}

func (x *Primitive) GetTypeHint() string {
	if x != nil {
		return x.TypeHint
	}
	return ""
}

func (m *Primitive) GetValue() isPrimitive_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Primitive) GetBoolValue() *Bool {
	if x, ok := x.GetValue().(*Primitive_BoolValue); ok {
		return x.BoolValue
	}
	return nil
}

func (x *Primitive) GetBytesValue() *Bytes {
	if x, ok := x.GetValue().(*Primitive_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (x *Primitive) GetStringValue() *String {
	if x, ok := x.GetValue().(*Primitive_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *Primitive) GetInt32Value() *Int32 {
	if x, ok := x.GetValue().(*Primitive_Int32Value); ok {
		return x.Int32Value
	}
	return nil
}

func (x *Primitive) GetInt64Value() *Int64 {
	if x, ok := x.GetValue().(*Primitive_Int64Value); ok {
		return x.Int64Value
	}
	return nil
}

func (x *Primitive) GetUint32Value() *Uint32 {
	if x, ok := x.GetValue().(*Primitive_Uint32Value); ok {
		return x.Uint32Value
	}
	return nil
}

func (x *Primitive) GetUint64Value() *Uint64 {
	if x, ok := x.GetValue().(*Primitive_Uint64Value); ok {
		return x.Uint64Value
	}
	return nil
}

func (x *Primitive) GetDoubleValue() *Double {
	if x, ok := x.GetValue().(*Primitive_DoubleValue); ok {
		return x.DoubleValue
	}
	return nil
}

func (x *Primitive) GetFloatValue() *Float {
	if x, ok := x.GetValue().(*Primitive_FloatValue); ok {
		return x.FloatValue
	}
	return nil
}

func (x *Primitive) GetAkitaAnnotations() *AkitaAnnotations {
	if x != nil {
		return x.AkitaAnnotations
	}
	return nil
}

func (x *Primitive) GetContainsRandomValue() bool {
	if x != nil {
		return x.ContainsRandomValue
	}
	return false
}

func (x *Primitive) GetFormats() map[string]bool {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *Primitive) GetFormatKind() string {
	if x != nil {
		return x.FormatKind
	}
	return ""
}

type isPrimitive_Value interface {
	isPrimitive_Value()
}

type Primitive_BoolValue struct {
	BoolValue *Bool `protobuf:"bytes,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Primitive_BytesValue struct {
	BytesValue *Bytes `protobuf:"bytes,3,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Primitive_StringValue struct {
	StringValue *String `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Primitive_Int32Value struct {
	Int32Value *Int32 `protobuf:"bytes,5,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type Primitive_Int64Value struct {
	Int64Value *Int64 `protobuf:"bytes,6,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Primitive_Uint32Value struct {
	Uint32Value *Uint32 `protobuf:"bytes,7,opt,name=uint32_value,json=uint32Value,proto3,oneof"`
}

type Primitive_Uint64Value struct {
	Uint64Value *Uint64 `protobuf:"bytes,8,opt,name=uint64_value,json=uint64Value,proto3,oneof"`
}

type Primitive_DoubleValue struct {
	DoubleValue *Double `protobuf:"bytes,9,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Primitive_FloatValue struct {
	FloatValue *Float `protobuf:"bytes,10,opt,name=float_value,json=floatValue,proto3,oneof"`
}

func (*Primitive_BoolValue) isPrimitive_Value() {}

func (*Primitive_BytesValue) isPrimitive_Value() {}

func (*Primitive_StringValue) isPrimitive_Value() {}

func (*Primitive_Int32Value) isPrimitive_Value() {}

func (*Primitive_Int64Value) isPrimitive_Value() {}

func (*Primitive_Uint32Value) isPrimitive_Value() {}

func (*Primitive_Uint64Value) isPrimitive_Value() {}

func (*Primitive_DoubleValue) isPrimitive_Value() {}

func (*Primitive_FloatValue) isPrimitive_Value() {}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems []*Data `protobuf:"bytes,1,rep,name=elems,proto3" json:"elems,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{10}
}

func (x *List) GetElems() []*Data {
	if x != nil {
		return x.Elems
	}
	return nil
}

// Represents a struct or a map.
type Struct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Populated if this represents a struct.
	Fields map[string]*Data `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Populated if this represents a map.
	MapType *MapData `protobuf:"bytes,2,opt,name=map_type,json=mapType,proto3" json:"map_type,omitempty"`
}

func (x *Struct) Reset() {
	*x = Struct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Struct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Struct) ProtoMessage() {}

func (x *Struct) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Struct.ProtoReflect.Descriptor instead.
func (*Struct) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{11}
}

func (x *Struct) GetFields() map[string]*Data {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Struct) GetMapType() *MapData {
	if x != nil {
		return x.MapType
	}
	return nil
}

// Gives the key and value types of a map.
type MapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *Data `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Data `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MapData) Reset() {
	*x = MapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapData) ProtoMessage() {}

func (x *MapData) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapData.ProtoReflect.Descriptor instead.
func (*MapData) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{12}
}

func (x *MapData) GetKey() *Data {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MapData) GetValue() *Data {
	if x != nil {
		return x.Value
	}
	return nil
}

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{13}
}

type Optional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Optional_Data
	//	*Optional_None
	Value isOptional_Value `protobuf_oneof:"value"`
}

func (x *Optional) Reset() {
	*x = Optional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Optional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Optional) ProtoMessage() {}

func (x *Optional) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Optional.ProtoReflect.Descriptor instead.
func (*Optional) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{14}
}

func (m *Optional) GetValue() isOptional_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Optional) GetData() *Data {
	if x, ok := x.GetValue().(*Optional_Data); ok {
		return x.Data
	}
	return nil
}

func (x *Optional) GetNone() *None {
	if x, ok := x.GetValue().(*Optional_None); ok {
		return x.None
	}
	return nil
}

type isOptional_Value interface {
	isOptional_Value()
}

type Optional_Data struct {
	Data *Data `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type Optional_None struct {
	None *None `protobuf:"bytes,2,opt,name=none,proto3,oneof"`
}

func (*Optional_Data) isOptional_Value() {}

func (*Optional_None) isOptional_Value() {}

type OneOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map keys are the hashes of the Data values. This allows us to stably
	// compare OneOf messages and ensure there are no duplicate options.
	// See hash function at:
	// https://github.com/akitasoftware/test-service/blob/master/lib/pbhash/pbhash.go
	Options map[string]*Data `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// True if this oneof was created by Akita during learn mode to encode a
	// potential conflict in the API spec.
	PotentialConflict bool `protobuf:"varint,2,opt,name=potential_conflict,json=potentialConflict,proto3" json:"potential_conflict,omitempty"`
}

func (x *OneOf) Reset() {
	*x = OneOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOf) ProtoMessage() {}

func (x *OneOf) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOf.ProtoReflect.Descriptor instead.
func (*OneOf) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{15}
}

func (x *OneOf) GetOptions() map[string]*Data {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *OneOf) GetPotentialConflict() bool {
	if x != nil {
		return x.PotentialConflict
	}
	return false
}

type GRPCMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GRPCMeta) Reset() {
	*x = GRPCMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRPCMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPCMeta) ProtoMessage() {}

func (x *GRPCMeta) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPCMeta.ProtoReflect.Descriptor instead.
func (*GRPCMeta) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{16}
}

type HTTPPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path parameter name
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HTTPPath) Reset() {
	*x = HTTPPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPPath) ProtoMessage() {}

func (x *HTTPPath) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPPath.ProtoReflect.Descriptor instead.
func (*HTTPPath) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{17}
}

func (x *HTTPPath) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type HTTPQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Query parameter name
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HTTPQuery) Reset() {
	*x = HTTPQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPQuery) ProtoMessage() {}

func (x *HTTPQuery) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPQuery.ProtoReflect.Descriptor instead.
func (*HTTPQuery) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{18}
}

func (x *HTTPQuery) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Note: Authorization header should go into HTTPAuth, not HTTPHeader
type HTTPHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Header name
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HTTPHeader) Reset() {
	*x = HTTPHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPHeader) ProtoMessage() {}

func (x *HTTPHeader) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPHeader.ProtoReflect.Descriptor instead.
func (*HTTPHeader) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{19}
}

func (x *HTTPHeader) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type HTTPAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type HTTPAuth_HTTPAuthType `protobuf:"varint,1,opt,name=type,proto3,enum=api_spec.HTTPAuth_HTTPAuthType" json:"type,omitempty"`
}

func (x *HTTPAuth) Reset() {
	*x = HTTPAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPAuth) ProtoMessage() {}

func (x *HTTPAuth) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPAuth.ProtoReflect.Descriptor instead.
func (*HTTPAuth) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{20}
}

func (x *HTTPAuth) GetType() HTTPAuth_HTTPAuthType {
	if x != nil {
		return x.Type
	}
	return HTTPAuth_UNKNOWN
}

type HTTPCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cookie parameter name
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HTTPCookie) Reset() {
	*x = HTTPCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPCookie) ProtoMessage() {}

func (x *HTTPCookie) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPCookie.ProtoReflect.Descriptor instead.
func (*HTTPCookie) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{21}
}

func (x *HTTPCookie) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Represents HTTP body or a part in a multipart body.
type HTTPBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType HTTPBody_ContentType `protobuf:"varint,1,opt,name=content_type,json=contentType,proto3,enum=api_spec.HTTPBody_ContentType" json:"content_type,omitempty"`
	// Preserve original value if "other"
	OtherType string `protobuf:"bytes,2,opt,name=other_type,json=otherType,proto3" json:"other_type,omitempty"`
}

func (x *HTTPBody) Reset() {
	*x = HTTPBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPBody) ProtoMessage() {}

func (x *HTTPBody) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPBody.ProtoReflect.Descriptor instead.
func (*HTTPBody) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{22}
}

func (x *HTTPBody) GetContentType() HTTPBody_ContentType {
	if x != nil {
		return x.ContentType
	}
	return HTTPBody_UNKNOWN
}

func (x *HTTPBody) GetOtherType() string {
	if x != nil {
		return x.OtherType
	}
	return ""
}

type HTTPMultipart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// "form-data" or "mixed"
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *HTTPMultipart) Reset() {
	*x = HTTPMultipart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPMultipart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPMultipart) ProtoMessage() {}

func (x *HTTPMultipart) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPMultipart.ProtoReflect.Descriptor instead.
func (*HTTPMultipart) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{23}
}

func (x *HTTPMultipart) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type HTTPEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HTTPEmpty) Reset() {
	*x = HTTPEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPEmpty) ProtoMessage() {}

func (x *HTTPEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPEmpty.ProtoReflect.Descriptor instead.
func (*HTTPEmpty) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{24}
}

type HTTPMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Should never be HTTPPath or HTTPQuery if this metadata is for a response.
	// Should never be HTTPEmpty if this metadata is for an argument or for a
	// response that contains headers, cookies, or a body.
	//
	// Types that are assignable to Location:
	//	*HTTPMeta_Path
	//	*HTTPMeta_Query
	//	*HTTPMeta_Header
	//	*HTTPMeta_Cookie
	//	*HTTPMeta_Body
	//	*HTTPMeta_Empty
	//	*HTTPMeta_Auth
	//	*HTTPMeta_Multipart
	Location isHTTPMeta_Location `protobuf_oneof:"location"`
	// Response code with which this data is returned.
	// Should be 0 if this data is an argument.
	// Should be -1 if this data is the default response.
	ResponseCode int32 `protobuf:"varint,7,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
}

func (x *HTTPMeta) Reset() {
	*x = HTTPMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPMeta) ProtoMessage() {}

func (x *HTTPMeta) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPMeta.ProtoReflect.Descriptor instead.
func (*HTTPMeta) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{25}
}

func (m *HTTPMeta) GetLocation() isHTTPMeta_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *HTTPMeta) GetPath() *HTTPPath {
	if x, ok := x.GetLocation().(*HTTPMeta_Path); ok {
		return x.Path
	}
	return nil
}

func (x *HTTPMeta) GetQuery() *HTTPQuery {
	if x, ok := x.GetLocation().(*HTTPMeta_Query); ok {
		return x.Query
	}
	return nil
}

func (x *HTTPMeta) GetHeader() *HTTPHeader {
	if x, ok := x.GetLocation().(*HTTPMeta_Header); ok {
		return x.Header
	}
	return nil
}

func (x *HTTPMeta) GetCookie() *HTTPCookie {
	if x, ok := x.GetLocation().(*HTTPMeta_Cookie); ok {
		return x.Cookie
	}
	return nil
}

func (x *HTTPMeta) GetBody() *HTTPBody {
	if x, ok := x.GetLocation().(*HTTPMeta_Body); ok {
		return x.Body
	}
	return nil
}

func (x *HTTPMeta) GetEmpty() *HTTPEmpty {
	if x, ok := x.GetLocation().(*HTTPMeta_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *HTTPMeta) GetAuth() *HTTPAuth {
	if x, ok := x.GetLocation().(*HTTPMeta_Auth); ok {
		return x.Auth
	}
	return nil
}

func (x *HTTPMeta) GetMultipart() *HTTPMultipart {
	if x, ok := x.GetLocation().(*HTTPMeta_Multipart); ok {
		return x.Multipart
	}
	return nil
}

func (x *HTTPMeta) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

type isHTTPMeta_Location interface {
	isHTTPMeta_Location()
}

type HTTPMeta_Path struct {
	Path *HTTPPath `protobuf:"bytes,1,opt,name=path,proto3,oneof"`
}

type HTTPMeta_Query struct {
	Query *HTTPQuery `protobuf:"bytes,2,opt,name=query,proto3,oneof"`
}

type HTTPMeta_Header struct {
	Header *HTTPHeader `protobuf:"bytes,3,opt,name=header,proto3,oneof"`
}

type HTTPMeta_Cookie struct {
	Cookie *HTTPCookie `protobuf:"bytes,4,opt,name=cookie,proto3,oneof"`
}

type HTTPMeta_Body struct {
	Body *HTTPBody `protobuf:"bytes,5,opt,name=body,proto3,oneof"`
}

type HTTPMeta_Empty struct {
	Empty *HTTPEmpty `protobuf:"bytes,6,opt,name=empty,proto3,oneof"`
}

type HTTPMeta_Auth struct {
	Auth *HTTPAuth `protobuf:"bytes,8,opt,name=auth,proto3,oneof"`
}

type HTTPMeta_Multipart struct {
	// Multipart data is represented by a struct where each field is an HTTPBody
	// with its own content-type.
	Multipart *HTTPMultipart `protobuf:"bytes,9,opt,name=multipart,proto3,oneof"`
}

func (*HTTPMeta_Path) isHTTPMeta_Location() {}

func (*HTTPMeta_Query) isHTTPMeta_Location() {}

func (*HTTPMeta_Header) isHTTPMeta_Location() {}

func (*HTTPMeta_Cookie) isHTTPMeta_Location() {}

func (*HTTPMeta_Body) isHTTPMeta_Location() {}

func (*HTTPMeta_Empty) isHTTPMeta_Location() {}

func (*HTTPMeta_Auth) isHTTPMeta_Location() {}

func (*HTTPMeta_Multipart) isHTTPMeta_Location() {}

type DataMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Meta:
	//	*DataMeta_Grpc
	//	*DataMeta_Http
	Meta isDataMeta_Meta `protobuf_oneof:"meta"`
}

func (x *DataMeta) Reset() {
	*x = DataMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMeta) ProtoMessage() {}

func (x *DataMeta) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMeta.ProtoReflect.Descriptor instead.
func (*DataMeta) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{26}
}

func (m *DataMeta) GetMeta() isDataMeta_Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (x *DataMeta) GetGrpc() *GRPCMeta {
	if x, ok := x.GetMeta().(*DataMeta_Grpc); ok {
		return x.Grpc
	}
	return nil
}

func (x *DataMeta) GetHttp() *HTTPMeta {
	if x, ok := x.GetMeta().(*DataMeta_Http); ok {
		return x.Http
	}
	return nil
}

type isDataMeta_Meta interface {
	isDataMeta_Meta()
}

type DataMeta_Grpc struct {
	Grpc *GRPCMeta `protobuf:"bytes,1,opt,name=grpc,proto3,oneof"`
}

type DataMeta_Http struct {
	Http *HTTPMeta `protobuf:"bytes,2,opt,name=http,proto3,oneof"`
}

func (*DataMeta_Grpc) isDataMeta_Meta() {}

func (*DataMeta_Http) isDataMeta_Meta() {}

type ExampleValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExampleValue) Reset() {
	*x = ExampleValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleValue) ProtoMessage() {}

func (x *ExampleValue) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleValue.ProtoReflect.Descriptor instead.
func (*ExampleValue) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{27}
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Data_Primitive
	//	*Data_Struct
	//	*Data_List
	//	*Data_Optional
	//	*Data_Oneof
	Value isData_Value `protobuf_oneof:"value"`
	// The meta field describes how this Data should be encoded in the target API
	// format (i.e. HTTP or gRPC).
	// For HTTP, only the top-level Data contains meta. For example, if Data is a
	// struct with HTTPBody in meta, it means "encode the full struct in the body
	// for the HTTP request/response." This applies to OneOf as well - all OneOf
	// options within the same Data share the same meta field in Data and each
	// option has an empty meta field.
	Meta *DataMeta `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	// True if the data can be represented by null. This is only meaningful when
	// the Data represents a type rather than a concrete value.
	//
	// Nullable is different from Optional:
	// - Optional means that the value can be omitted
	// - Nullable means that we can use null as the value
	Nullable bool `protobuf:"varint,7,opt,name=nullable,proto3" json:"nullable,omitempty"`
	// Example of values represented by this data. This is for informational
	// purpose only, so we use string to encode values and this field is not
	// included in pbhash.
	ExampleValues map[string]*ExampleValue `protobuf:"bytes,8,rep,name=example_values,json=exampleValues,proto3" json:"example_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{28}
}

func (m *Data) GetValue() isData_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Data) GetPrimitive() *Primitive {
	if x, ok := x.GetValue().(*Data_Primitive); ok {
		return x.Primitive
	}
	return nil
}

func (x *Data) GetStruct() *Struct {
	if x, ok := x.GetValue().(*Data_Struct); ok {
		return x.Struct
	}
	return nil
}

func (x *Data) GetList() *List {
	if x, ok := x.GetValue().(*Data_List); ok {
		return x.List
	}
	return nil
}

func (x *Data) GetOptional() *Optional {
	if x, ok := x.GetValue().(*Data_Optional); ok {
		return x.Optional
	}
	return nil
}

func (x *Data) GetOneof() *OneOf {
	if x, ok := x.GetValue().(*Data_Oneof); ok {
		return x.Oneof
	}
	return nil
}

func (x *Data) GetMeta() *DataMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Data) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *Data) GetExampleValues() map[string]*ExampleValue {
	if x != nil {
		return x.ExampleValues
	}
	return nil
}

type isData_Value interface {
	isData_Value()
}

type Data_Primitive struct {
	Primitive *Primitive `protobuf:"bytes,1,opt,name=primitive,proto3,oneof"`
}

type Data_Struct struct {
	Struct *Struct `protobuf:"bytes,2,opt,name=struct,proto3,oneof"`
}

type Data_List struct {
	List *List `protobuf:"bytes,3,opt,name=list,proto3,oneof"`
}

type Data_Optional struct {
	// Indicates whether the value can be omitted. See comparison to nullable
	// below.
	Optional *Optional `protobuf:"bytes,4,opt,name=optional,proto3,oneof"`
}

type Data_Oneof struct {
	// This should only exist if Data is describing an API spec, not when Data
	// represents an instantiated value of an API call.
	Oneof *OneOf `protobuf:"bytes,6,opt,name=oneof,proto3,oneof"`
}

func (*Data_Primitive) isData_Value() {}

func (*Data_Struct) isData_Value() {}

func (*Data_List) isData_Value() {}

func (*Data_Optional) isData_Value() {}

func (*Data_Oneof) isData_Value() {}

type MethodID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ApiType ApiType `protobuf:"varint,2,opt,name=api_type,json=apiType,proto3,enum=api_spec.ApiType" json:"api_type,omitempty"`
}

func (x *MethodID) Reset() {
	*x = MethodID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodID) ProtoMessage() {}

func (x *MethodID) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodID.ProtoReflect.Descriptor instead.
func (*MethodID) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{29}
}

func (x *MethodID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MethodID) GetApiType() ApiType {
	if x != nil {
		return x.ApiType
	}
	return ApiType_GRPC
}

type GRPCMethodMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GRPCMethodMeta) Reset() {
	*x = GRPCMethodMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRPCMethodMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPCMethodMeta) ProtoMessage() {}

func (x *GRPCMethodMeta) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPCMethodMeta.ProtoReflect.Descriptor instead.
func (*GRPCMethodMeta) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{30}
}

type HTTPMethodMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	// The request-URI as defined by RFC 2616 section 5.1.
	// May contain path parameters in the form of `{key}` for substitution
	// at runtime (e.g. `/user/{user_name}`). For substitution to happen, a
	// corresponding `HTTPPath` Data must exist in the args of the method, with
	// the `HTTPPath.Key` field set to the same value as the format string (e.g.
	// `HTTPPath{ key: "user_name" }`) or else the substitution does not occur
	// and the path is used as is.
	PathTemplate string `protobuf:"bytes,2,opt,name=path_template,json=pathTemplate,proto3" json:"path_template,omitempty"`
	Host         string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	// Processing latency in milliseconds.  This is 0 in specs, or if it
	// has not been measured (in an existing trace, or a request without
	// a corresponding response.)
	//
	// This measurement is from the last byte of the HTTP request to the
	// first byte of the HTTP response, ignoring time spent in transmission.
	ProcessingLatency float32                                        `protobuf:"fixed32,4,opt,name=processing_latency,json=processingLatency,proto3" json:"processing_latency,omitempty"`
	PathParamAlg      HTTPMethodMeta_PathParameterInferenceAlgorithm `protobuf:"varint,5,opt,name=path_param_alg,json=pathParamAlg,proto3,enum=api_spec.HTTPMethodMeta_PathParameterInferenceAlgorithm" json:"path_param_alg,omitempty"`
}

func (x *HTTPMethodMeta) Reset() {
	*x = HTTPMethodMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPMethodMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPMethodMeta) ProtoMessage() {}

func (x *HTTPMethodMeta) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPMethodMeta.ProtoReflect.Descriptor instead.
func (*HTTPMethodMeta) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{31}
}

func (x *HTTPMethodMeta) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPMethodMeta) GetPathTemplate() string {
	if x != nil {
		return x.PathTemplate
	}
	return ""
}

func (x *HTTPMethodMeta) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *HTTPMethodMeta) GetProcessingLatency() float32 {
	if x != nil {
		return x.ProcessingLatency
	}
	return 0
}

func (x *HTTPMethodMeta) GetPathParamAlg() HTTPMethodMeta_PathParameterInferenceAlgorithm {
	if x != nil {
		return x.PathParamAlg
	}
	return HTTPMethodMeta_UNKNOWN
}

type MethodMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Meta:
	//	*MethodMeta_Grpc
	//	*MethodMeta_Http
	Meta isMethodMeta_Meta `protobuf_oneof:"meta"`
}

func (x *MethodMeta) Reset() {
	*x = MethodMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodMeta) ProtoMessage() {}

func (x *MethodMeta) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodMeta.ProtoReflect.Descriptor instead.
func (*MethodMeta) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{32}
}

func (m *MethodMeta) GetMeta() isMethodMeta_Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (x *MethodMeta) GetGrpc() *GRPCMethodMeta {
	if x, ok := x.GetMeta().(*MethodMeta_Grpc); ok {
		return x.Grpc
	}
	return nil
}

func (x *MethodMeta) GetHttp() *HTTPMethodMeta {
	if x, ok := x.GetMeta().(*MethodMeta_Http); ok {
		return x.Http
	}
	return nil
}

type isMethodMeta_Meta interface {
	isMethodMeta_Meta()
}

type MethodMeta_Grpc struct {
	Grpc *GRPCMethodMeta `protobuf:"bytes,1,opt,name=grpc,proto3,oneof"`
}

type MethodMeta_Http struct {
	Http *HTTPMethodMeta `protobuf:"bytes,2,opt,name=http,proto3,oneof"`
}

func (*MethodMeta_Grpc) isMethodMeta_Meta() {}

func (*MethodMeta_Http) isMethodMeta_Meta() {}

type Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *MethodID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// For HTTP REST APIs, the keys in this map have no meaning.
	// Requests
	Args map[string]*Data `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// For HTTP REST APIs, the keys in this map have no meaning.
	// Responses
	Responses map[string]*Data `protobuf:"bytes,3,rep,name=responses,proto3" json:"responses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Meta      *MethodMeta      `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Method) Reset() {
	*x = Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_method_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Method) ProtoMessage() {}

func (x *Method) ProtoReflect() protoreflect.Message {
	mi := &file_method_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Method.ProtoReflect.Descriptor instead.
func (*Method) Descriptor() ([]byte, []int) {
	return file_method_proto_rawDescGZIP(), []int{33}
}

func (x *Method) GetId() *MethodID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Method) GetArgs() map[string]*Data {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Method) GetResponses() map[string]*Data {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *Method) GetMeta() *MethodMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

var File_method_proto protoreflect.FileDescriptor

var file_method_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x1a, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x05, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a,
	0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x27,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a,
	0x06, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x48, 0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x05, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xa4, 0x06, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x32, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32,
	0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x35, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x61,
	0x6b, 0x69, 0x74, 0x61, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x41, 0x6b, 0x69, 0x74, 0x61, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x10, 0x61, 0x6b, 0x69, 0x74, 0x61, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73,
	0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x4b, 0x69, 0x6e, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x6d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x49, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x51, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x5f, 0x0a,
	0x08, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x24, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xba,
	0x01, 0x0a, 0x05, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x12, 0x36, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x6f,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x1a,
	0x4a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0a, 0x0a, 0x08, 0x47,
	0x52, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x1c, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1d, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x1e, 0x0a, 0x0a, 0x48, 0x54, 0x54, 0x50, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x73, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x41, 0x75,
	0x74, 0x68, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x0c, 0x48, 0x54, 0x54, 0x50, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x45, 0x41, 0x52, 0x45, 0x52, 0x10, 0x02, 0x22, 0x1e, 0x0a, 0x0a, 0x48, 0x54, 0x54,
	0x50, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xf8, 0x01, 0x0a, 0x08, 0x48, 0x54,
	0x54, 0x50, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x55, 0x52, 0x4c, 0x5f, 0x45, 0x4e, 0x43, 0x4f,
	0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x5f, 0x53,
	0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x44, 0x46, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x10, 0x05,
	0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48,
	0x45, 0x52, 0x10, 0x08, 0x22, 0x23, 0x0a, 0x0d, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x48, 0x54, 0x54,
	0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xac, 0x03, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54,
	0x50, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48,
	0x54, 0x54, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x41,
	0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x09, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x28, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x4d,
	0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x28, 0x0a, 0x04, 0x68,
	0x74, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x04, 0x68, 0x74, 0x74, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x0e, 0x0a,
	0x0c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd9, 0x03,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12,
	0x27, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x48,
	0x00, 0x52, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x58, 0x0a, 0x12, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x61, 0x70, 0x69,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x61, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x52, 0x50, 0x43, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xb8, 0x02, 0x0a, 0x0e, 0x48, 0x54,
	0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74,
	0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x5e, 0x0a, 0x0e,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x48, 0x54, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x0c,
	0x70, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x41, 0x6c, 0x67, 0x22, 0x46, 0x0a, 0x1f,
	0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x76, 0x31, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x76, 0x32, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02,
	0x76, 0x33, 0x10, 0x03, 0x22, 0x74, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x2e, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x47, 0x52, 0x50, 0x43,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x67, 0x72,
	0x70, 0x63, 0x12, 0x2e, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xdc, 0x02, 0x0a, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x1a, 0x47, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4c, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2c, 0x5a, 0x2a, 0x61, 0x6b, 0x69,
	0x74, 0x61, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x61, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_method_proto_rawDescOnce sync.Once
	file_method_proto_rawDescData = file_method_proto_rawDesc
)

func file_method_proto_rawDescGZIP() []byte {
	file_method_proto_rawDescOnce.Do(func() {
		file_method_proto_rawDescData = protoimpl.X.CompressGZIP(file_method_proto_rawDescData)
	})
	return file_method_proto_rawDescData
}

var file_method_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_method_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_method_proto_goTypes = []interface{}{
	(HTTPAuth_HTTPAuthType)(0),                          // 0: api_spec.HTTPAuth.HTTPAuthType
	(HTTPBody_ContentType)(0),                           // 1: api_spec.HTTPBody.ContentType
	(HTTPMethodMeta_PathParameterInferenceAlgorithm)(0), // 2: api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm
	(*Bool)(nil),             // 3: api_spec.Bool
	(*Bytes)(nil),            // 4: api_spec.Bytes
	(*String)(nil),           // 5: api_spec.String
	(*Int32)(nil),            // 6: api_spec.Int32
	(*Int64)(nil),            // 7: api_spec.Int64
	(*Uint32)(nil),           // 8: api_spec.Uint32
	(*Uint64)(nil),           // 9: api_spec.Uint64
	(*Double)(nil),           // 10: api_spec.Double
	(*Float)(nil),            // 11: api_spec.Float
	(*Primitive)(nil),        // 12: api_spec.Primitive
	(*List)(nil),             // 13: api_spec.List
	(*Struct)(nil),           // 14: api_spec.Struct
	(*MapData)(nil),          // 15: api_spec.MapData
	(*None)(nil),             // 16: api_spec.None
	(*Optional)(nil),         // 17: api_spec.Optional
	(*OneOf)(nil),            // 18: api_spec.OneOf
	(*GRPCMeta)(nil),         // 19: api_spec.GRPCMeta
	(*HTTPPath)(nil),         // 20: api_spec.HTTPPath
	(*HTTPQuery)(nil),        // 21: api_spec.HTTPQuery
	(*HTTPHeader)(nil),       // 22: api_spec.HTTPHeader
	(*HTTPAuth)(nil),         // 23: api_spec.HTTPAuth
	(*HTTPCookie)(nil),       // 24: api_spec.HTTPCookie
	(*HTTPBody)(nil),         // 25: api_spec.HTTPBody
	(*HTTPMultipart)(nil),    // 26: api_spec.HTTPMultipart
	(*HTTPEmpty)(nil),        // 27: api_spec.HTTPEmpty
	(*HTTPMeta)(nil),         // 28: api_spec.HTTPMeta
	(*DataMeta)(nil),         // 29: api_spec.DataMeta
	(*ExampleValue)(nil),     // 30: api_spec.ExampleValue
	(*Data)(nil),             // 31: api_spec.Data
	(*MethodID)(nil),         // 32: api_spec.MethodID
	(*GRPCMethodMeta)(nil),   // 33: api_spec.GRPCMethodMeta
	(*HTTPMethodMeta)(nil),   // 34: api_spec.HTTPMethodMeta
	(*MethodMeta)(nil),       // 35: api_spec.MethodMeta
	(*Method)(nil),           // 36: api_spec.Method
	nil,                      // 37: api_spec.Primitive.FormatsEntry
	nil,                      // 38: api_spec.Struct.FieldsEntry
	nil,                      // 39: api_spec.OneOf.OptionsEntry
	nil,                      // 40: api_spec.Data.ExampleValuesEntry
	nil,                      // 41: api_spec.Method.ArgsEntry
	nil,                      // 42: api_spec.Method.ResponsesEntry
	(*BoolType)(nil),         // 43: api_spec.BoolType
	(*BytesType)(nil),        // 44: api_spec.BytesType
	(*StringType)(nil),       // 45: api_spec.StringType
	(*Int32Type)(nil),        // 46: api_spec.Int32Type
	(*Int64Type)(nil),        // 47: api_spec.Int64Type
	(*Uint32Type)(nil),       // 48: api_spec.Uint32Type
	(*Uint64Type)(nil),       // 49: api_spec.Uint64Type
	(*DoubleType)(nil),       // 50: api_spec.DoubleType
	(*FloatType)(nil),        // 51: api_spec.FloatType
	(*AkitaAnnotations)(nil), // 52: api_spec.AkitaAnnotations
	(ApiType)(0),             // 53: api_spec.ApiType
}
var file_method_proto_depIdxs = []int32{
	43, // 0: api_spec.Bool.type:type_name -> api_spec.BoolType
	44, // 1: api_spec.Bytes.type:type_name -> api_spec.BytesType
	45, // 2: api_spec.String.type:type_name -> api_spec.StringType
	46, // 3: api_spec.Int32.type:type_name -> api_spec.Int32Type
	47, // 4: api_spec.Int64.type:type_name -> api_spec.Int64Type
	48, // 5: api_spec.Uint32.type:type_name -> api_spec.Uint32Type
	49, // 6: api_spec.Uint64.type:type_name -> api_spec.Uint64Type
	50, // 7: api_spec.Double.type:type_name -> api_spec.DoubleType
	51, // 8: api_spec.Float.type:type_name -> api_spec.FloatType
	3,  // 9: api_spec.Primitive.bool_value:type_name -> api_spec.Bool
	4,  // 10: api_spec.Primitive.bytes_value:type_name -> api_spec.Bytes
	5,  // 11: api_spec.Primitive.string_value:type_name -> api_spec.String
	6,  // 12: api_spec.Primitive.int32_value:type_name -> api_spec.Int32
	7,  // 13: api_spec.Primitive.int64_value:type_name -> api_spec.Int64
	8,  // 14: api_spec.Primitive.uint32_value:type_name -> api_spec.Uint32
	9,  // 15: api_spec.Primitive.uint64_value:type_name -> api_spec.Uint64
	10, // 16: api_spec.Primitive.double_value:type_name -> api_spec.Double
	11, // 17: api_spec.Primitive.float_value:type_name -> api_spec.Float
	52, // 18: api_spec.Primitive.akita_annotations:type_name -> api_spec.AkitaAnnotations
	37, // 19: api_spec.Primitive.formats:type_name -> api_spec.Primitive.FormatsEntry
	31, // 20: api_spec.List.elems:type_name -> api_spec.Data
	38, // 21: api_spec.Struct.fields:type_name -> api_spec.Struct.FieldsEntry
	15, // 22: api_spec.Struct.map_type:type_name -> api_spec.MapData
	31, // 23: api_spec.MapData.key:type_name -> api_spec.Data
	31, // 24: api_spec.MapData.value:type_name -> api_spec.Data
	31, // 25: api_spec.Optional.data:type_name -> api_spec.Data
	16, // 26: api_spec.Optional.none:type_name -> api_spec.None
	39, // 27: api_spec.OneOf.options:type_name -> api_spec.OneOf.OptionsEntry
	0,  // 28: api_spec.HTTPAuth.type:type_name -> api_spec.HTTPAuth.HTTPAuthType
	1,  // 29: api_spec.HTTPBody.content_type:type_name -> api_spec.HTTPBody.ContentType
	20, // 30: api_spec.HTTPMeta.path:type_name -> api_spec.HTTPPath
	21, // 31: api_spec.HTTPMeta.query:type_name -> api_spec.HTTPQuery
	22, // 32: api_spec.HTTPMeta.header:type_name -> api_spec.HTTPHeader
	24, // 33: api_spec.HTTPMeta.cookie:type_name -> api_spec.HTTPCookie
	25, // 34: api_spec.HTTPMeta.body:type_name -> api_spec.HTTPBody
	27, // 35: api_spec.HTTPMeta.empty:type_name -> api_spec.HTTPEmpty
	23, // 36: api_spec.HTTPMeta.auth:type_name -> api_spec.HTTPAuth
	26, // 37: api_spec.HTTPMeta.multipart:type_name -> api_spec.HTTPMultipart
	19, // 38: api_spec.DataMeta.grpc:type_name -> api_spec.GRPCMeta
	28, // 39: api_spec.DataMeta.http:type_name -> api_spec.HTTPMeta
	12, // 40: api_spec.Data.primitive:type_name -> api_spec.Primitive
	14, // 41: api_spec.Data.struct:type_name -> api_spec.Struct
	13, // 42: api_spec.Data.list:type_name -> api_spec.List
	17, // 43: api_spec.Data.optional:type_name -> api_spec.Optional
	18, // 44: api_spec.Data.oneof:type_name -> api_spec.OneOf
	29, // 45: api_spec.Data.meta:type_name -> api_spec.DataMeta
	40, // 46: api_spec.Data.example_values:type_name -> api_spec.Data.ExampleValuesEntry
	53, // 47: api_spec.MethodID.api_type:type_name -> api_spec.ApiType
	2,  // 48: api_spec.HTTPMethodMeta.path_param_alg:type_name -> api_spec.HTTPMethodMeta.PathParameterInferenceAlgorithm
	33, // 49: api_spec.MethodMeta.grpc:type_name -> api_spec.GRPCMethodMeta
	34, // 50: api_spec.MethodMeta.http:type_name -> api_spec.HTTPMethodMeta
	32, // 51: api_spec.Method.id:type_name -> api_spec.MethodID
	41, // 52: api_spec.Method.args:type_name -> api_spec.Method.ArgsEntry
	42, // 53: api_spec.Method.responses:type_name -> api_spec.Method.ResponsesEntry
	35, // 54: api_spec.Method.meta:type_name -> api_spec.MethodMeta
	31, // 55: api_spec.Struct.FieldsEntry.value:type_name -> api_spec.Data
	31, // 56: api_spec.OneOf.OptionsEntry.value:type_name -> api_spec.Data
	30, // 57: api_spec.Data.ExampleValuesEntry.value:type_name -> api_spec.ExampleValue
	31, // 58: api_spec.Method.ArgsEntry.value:type_name -> api_spec.Data
	31, // 59: api_spec.Method.ResponsesEntry.value:type_name -> api_spec.Data
	60, // [60:60] is the sub-list for method output_type
	60, // [60:60] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_method_proto_init() }
func file_method_proto_init() {
	if File_method_proto != nil {
		return
	}
	file_api_type_proto_init()
	file_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_method_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Double); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Float); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Primitive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Struct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Optional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRPCMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPMultipart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRPCMethodMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPMethodMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_method_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_method_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Primitive_BoolValue)(nil),
		(*Primitive_BytesValue)(nil),
		(*Primitive_StringValue)(nil),
		(*Primitive_Int32Value)(nil),
		(*Primitive_Int64Value)(nil),
		(*Primitive_Uint32Value)(nil),
		(*Primitive_Uint64Value)(nil),
		(*Primitive_DoubleValue)(nil),
		(*Primitive_FloatValue)(nil),
	}
	file_method_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*Optional_Data)(nil),
		(*Optional_None)(nil),
	}
	file_method_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*HTTPMeta_Path)(nil),
		(*HTTPMeta_Query)(nil),
		(*HTTPMeta_Header)(nil),
		(*HTTPMeta_Cookie)(nil),
		(*HTTPMeta_Body)(nil),
		(*HTTPMeta_Empty)(nil),
		(*HTTPMeta_Auth)(nil),
		(*HTTPMeta_Multipart)(nil),
	}
	file_method_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*DataMeta_Grpc)(nil),
		(*DataMeta_Http)(nil),
	}
	file_method_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*Data_Primitive)(nil),
		(*Data_Struct)(nil),
		(*Data_List)(nil),
		(*Data_Optional)(nil),
		(*Data_Oneof)(nil),
	}
	file_method_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*MethodMeta_Grpc)(nil),
		(*MethodMeta_Http)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_method_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_method_proto_goTypes,
		DependencyIndexes: file_method_proto_depIdxs,
		EnumInfos:         file_method_proto_enumTypes,
		MessageInfos:      file_method_proto_msgTypes,
	}.Build()
	File_method_proto = out.File
	file_method_proto_rawDesc = nil
	file_method_proto_goTypes = nil
	file_method_proto_depIdxs = nil
}
